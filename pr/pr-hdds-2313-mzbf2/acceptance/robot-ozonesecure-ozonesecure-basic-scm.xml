<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20191016 06:42:29.690" generator="Robot 3.1.2 (Python 2.7.5 on linux2)">
<suite source="/opt/hadoop/smoketest/basic" id="s1" name="ozonesecure-basic">
<suite source="/opt/hadoop/smoketest/basic/basic.robot" id="s1-s1" name="Basic">
<test id="s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 06:42:29.750" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 06:42:29.756" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 06:42:29.756" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20191016 06:42:29.756" starttime="20191016 06:42:29.749"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 06:42:29.757" level="INFO">scm</msg>
<status status="PASS" endtime="20191016 06:42:29.757" starttime="20191016 06:42:29.757"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 06:42:29.758" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 06:42:29.758" starttime="20191016 06:42:29.758"></status>
</kw>
<msg timestamp="20191016 06:42:29.759" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20191016 06:42:29.759" starttime="20191016 06:42:29.748"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 06:42:29.761" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 06:42:29.789" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 06:42:29.789" level="INFO">${output} = </msg>
<status status="PASS" endtime="20191016 06:42:29.789" starttime="20191016 06:42:29.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 06:42:29.790" level="INFO"></msg>
<status status="PASS" endtime="20191016 06:42:29.790" starttime="20191016 06:42:29.789"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 06:42:29.790" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 06:42:29.791" starttime="20191016 06:42:29.790"></status>
</kw>
<status status="PASS" endtime="20191016 06:42:29.791" starttime="20191016 06:42:29.759"></status>
</kw>
<status status="PASS" endtime="20191016 06:42:29.791" starttime="20191016 06:42:29.759"></status>
</kw>
<status status="PASS" endtime="20191016 06:42:29.791" starttime="20191016 06:42:29.748"></status>
</kw>
<status status="PASS" endtime="20191016 06:42:29.791" starttime="20191016 06:42:29.747"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 06:42:29.793" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 06:42:29.833" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 06:42:29.834" level="INFO">${output} = HTTP/1.1 401 Authentication required
Date: Wed, 16 Oct 2019 06:42:29 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Coo...</msg>
<status status="PASS" endtime="20191016 06:42:29.834" starttime="20191016 06:42:29.792"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 06:42:29.835" level="INFO">HTTP/1.1 401 Authentication required
Date: Wed, 16 Oct 2019 06:42:29 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 293

HTTP/1.1 200 OK
Date: Wed, 16 Oct 2019 06:42:29 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCOfdL5JSKAHTkHvxY/wy7lT+2L6a/sxnYq/g4VkCsUUcHA6amJW3x3yuVX4+EAqFfn8WVk5pUiKrbuzj4hYi7iQvh
Set-Cookie: hadoop.auth="u=root&amp;p=HTTP/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1571244149823&amp;s=X/LRXhcwKSA61RoH2e0KiXLokLP9tYpBijom2FNF0RE="; Path=/; HttpOnly
Last-Modified: Wed, 16 Oct 2019 06:09:20 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" endtime="20191016 06:42:29.835" starttime="20191016 06:42:29.834"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 06:42:29.836" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 06:42:29.837" starttime="20191016 06:42:29.836"></status>
</kw>
<msg timestamp="20191016 06:42:29.837" level="INFO">${result} = HTTP/1.1 401 Authentication required
Date: Wed, 16 Oct 2019 06:42:29 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Coo...</msg>
<status status="PASS" endtime="20191016 06:42:29.837" starttime="20191016 06:42:29.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20191016 06:42:29.838" starttime="20191016 06:42:29.837"></status>
</kw>
<status status="PASS" endtime="20191016 06:42:29.838" critical="yes" starttime="20191016 06:42:29.746"></status>
</test>
<test id="s1-s1-t2" name="Start freon testing">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 06:42:29.842" level="INFO">Running command 'ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 06:42:38.618" level="INFO">${rc} = 255</msg>
<msg timestamp="20191016 06:42:38.619" level="INFO">${output} = 2019-10-16 06:42:30,892 INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2019-10-16 06:42:31,072 INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s)...</msg>
<status status="PASS" endtime="20191016 06:42:38.619" starttime="20191016 06:42:29.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 06:42:38.621" level="INFO">2019-10-16 06:42:30,892 INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2019-10-16 06:42:31,072 INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2019-10-16 06:42:31,072 INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2019-10-16 06:42:33,522 [main] INFO       - Number of Threads: 1
2019-10-16 06:42:33,525 [main] INFO       - Number of Volumes: 5.
2019-10-16 06:42:33,525 [main] INFO       - Number of Buckets per Volume: 5.
2019-10-16 06:42:33,525 [main] INFO       - Number of Keys per Bucket: 5.
2019-10-16 06:42:33,525 [main] INFO       - Key size: 10240 bytes
2019-10-16 06:42:33,525 [main] INFO       - Buffer size: 4096 bytes
2019-10-16 06:42:33,526 [main] INFO       - validateWrites : false
2019-10-16 06:42:33,531 [main] INFO       - Starting progress bar Thread.

 0.00% |?                                                                                                    |  0/125 Time: 0:00:002019-10-16 06:42:33,567 [pool-2-thread-1] INFO       - Creating Volume: vol-0-29880, with HTTP/scm@EXAMPLE.COM as owner.
2019-10-16 06:42:33,705 [pool-2-thread-1] INFO       - Creating Volume: vol-1-76135, with HTTP/scm@EXAMPLE.COM as owner.
2019-10-16 06:42:33,720 [pool-2-thread-1] INFO       - Creating Volume: vol-2-69289, with HTTP/scm@EXAMPLE.COM as owner.
2019-10-16 06:42:33,736 [pool-2-thread-1] INFO       - Creating Volume: vol-3-45166, with HTTP/scm@EXAMPLE.COM as owner.
2019-10-16 06:42:33,748 [pool-2-thread-1] INFO       - Creating Volume: vol-4-67454, with HTTP/scm@EXAMPLE.COM as owner.
2019-10-16 06:42:33,763 [pool-2-thread-1] INFO       - Creating Bucket: vol-0-29880/bucket-0-27876, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-10-16 06:42:33,795 [pool-2-thread-1] ERROR      - Could not create bucket 
BUCKET_NOT_FOUND org.apache.hadoop.ozone.om.exceptions.OMException: Bucket bucket-0-27876 is not found
	at org.apache.hadoop.ozone.om.protocolPB.OzoneManagerProtocolClientSideTranslatorPB.handleError(OzoneManagerProtocolClientSideTranslatorPB.java:732)
	at org.apache.hadoop.ozone.om.protocolPB.OzoneManagerProtocolClientSideTranslatorPB.createBucket(OzoneManagerProtocolClientSideTranslatorPB.java:577)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.hadoop.hdds.tracing.TraceAllMethod.invoke(TraceAllMethod.java:66)
	at com.sun.proxy.$Proxy21.createBucket(Unknown Source)
	at org.apache.hadoop.ozone.client.rpc.RpcClient.createBucket(RpcClient.java:414)
	at org.apache.hadoop.ozone.client.rpc.RpcClient.createBucket(RpcClient.java:372)
	at org.apache.hadoop.ozone.client.OzoneVolume.createBucket(OzoneVolume.java:209)
	at org.apache.hadoop.ozone.freon.RandomKeyGenerator.createBucket(RandomKeyGenerator.java:660)
	at org.apache.hadoop.ozone.freon.RandomKeyGenerator.access$800(RandomKeyGenerator.java:88)
	at org.apache.hadoop.ozone.freon.RandomKeyGenerator$ObjectCreator.run(RandomKeyGenerator.java:608)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
 0.00% |?                                                                                                    |  0/125 Time: 0:00:01 0.00% |?                                                                                                    |  0/125 Time: 0:00:02 0.00% |?                                                                                                    |  0/125 Time: 0:00:03 0.00% |?                                                                                                    |  0/125 Time: 0:00:04 100.00% |?????????????????????????????????????????????????????????????????????????????????????????????????????|  125/125 Time: 0:00:05
Bucket bucket-0-27876 is not found

***************************************************
Status: Failed
Git Base Revision: e97acb3bd8f3befd27418996fa5d4b50bf2e17bf
Number of Volumes created: 5
Number of Buckets created: 0
Number of Keys added: 0
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,180
Average Time spent in bucket creation: 00:00:00,000
Average Time spent in key creation: 00:00:00,000
Average Time spent in key write: 00:00:00,000
Total bytes written: 0
Total Execution time: 00:00:07,194
***************************************************</msg>
<status status="PASS" endtime="20191016 06:42:38.621" starttime="20191016 06:42:38.620"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 06:42:38.622" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191016 06:42:38.623" level="FAIL">255 != 0</msg>
<status status="FAIL" endtime="20191016 06:42:38.623" starttime="20191016 06:42:38.621"></status>
</kw>
<status status="FAIL" endtime="20191016 06:42:38.624" starttime="20191016 06:42:29.839"></status>
</kw>
<status status="FAIL" endtime="20191016 06:42:38.624" critical="yes" starttime="20191016 06:42:29.839">255 != 0</status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="FAIL" endtime="20191016 06:42:38.625" starttime="20191016 06:42:29.719"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/ozone-shell.robot" id="s1-s2" name="Ozone-Shell">
<kw type="setup" name="Generate prefix">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20191016 06:42:38.639" level="INFO">${random} = 09012</msg>
<status status="PASS" endtime="20191016 06:42:38.639" starttime="20191016 06:42:38.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${prefix}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20191016 06:42:38.641" level="INFO">${prefix} = 09012</msg>
<status status="PASS" endtime="20191016 06:42:38.641" starttime="20191016 06:42:38.640"></status>
</kw>
<status status="PASS" endtime="20191016 06:42:38.641" starttime="20191016 06:42:38.638"></status>
</kw>
<test id="s1-s2-t1" name="RpcClient with port">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 06:42:38.647" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 06:42:38.654" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 06:42:38.654" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20191016 06:42:38.654" starttime="20191016 06:42:38.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 06:42:38.656" level="INFO">scm</msg>
<status status="PASS" endtime="20191016 06:42:38.656" starttime="20191016 06:42:38.655"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 06:42:38.657" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 06:42:38.657" starttime="20191016 06:42:38.656"></status>
</kw>
<msg timestamp="20191016 06:42:38.658" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20191016 06:42:38.658" starttime="20191016 06:42:38.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20191016 06:42:38.660" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20191016 06:42:38.660" starttime="20191016 06:42:38.658"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 06:42:38.663" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 06:42:38.681" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 06:42:38.681" level="INFO">${output} = </msg>
<status status="PASS" endtime="20191016 06:42:38.681" starttime="20191016 06:42:38.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 06:42:38.683" level="INFO"></msg>
<status status="PASS" endtime="20191016 06:42:38.683" starttime="20191016 06:42:38.682"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 06:42:38.684" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 06:42:38.684" starttime="20191016 06:42:38.683"></status>
</kw>
<status status="PASS" endtime="20191016 06:42:38.684" starttime="20191016 06:42:38.661"></status>
</kw>
<status status="PASS" endtime="20191016 06:42:38.684" starttime="20191016 06:42:38.660"></status>
</kw>
<status status="PASS" endtime="20191016 06:42:38.684" starttime="20191016 06:42:38.643"></status>
</kw>
<status status="PASS" endtime="20191016 06:42:38.685" starttime="20191016 06:42:38.642"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 06:42:38.688" level="INFO">Running command 'ozone sh volume create o3://om:9862/09012-rpcwoport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 06:42:41.379" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 06:42:41.379" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191016 06:42:41.379" starttime="20191016 06:42:38.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 06:42:41.381" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20191016 06:42:41.381" starttime="20191016 06:42:41.380"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 06:42:41.382" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 06:42:41.382" starttime="20191016 06:42:41.381"></status>
</kw>
<msg timestamp="20191016 06:42:41.382" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191016 06:42:41.382" starttime="20191016 06:42:38.686"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20191016 06:42:41.383" starttime="20191016 06:42:41.382"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | grep -Ev 'Removed|WARN|DEBUG|ERROR|INFO|TRACE' | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 06:42:41.386" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | grep -Ev 'Removed|WARN|DEBUG|ERROR|INFO|TRACE' | jq -r '. | select(.name=="09012-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 06:42:44.294" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 06:42:44.294" level="INFO">${output} = {
  "metadata": {},
  "name": "09012-rpcwoport",
  "admin": "root",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": 1571208161291,
  "acls": [
    {
      "type": "USER",
      "name": "testu...</msg>
<status status="PASS" endtime="20191016 06:42:44.294" starttime="20191016 06:42:41.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 06:42:44.296" level="INFO">{
  "metadata": {},
  "name": "09012-rpcwoport",
  "admin": "root",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": 1571208161291,
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" endtime="20191016 06:42:44.296" starttime="20191016 06:42:44.295"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 06:42:44.297" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 06:42:44.298" starttime="20191016 06:42:44.297"></status>
</kw>
<msg timestamp="20191016 06:42:44.298" level="INFO">${result} = {
  "metadata": {},
  "name": "09012-rpcwoport",
  "admin": "root",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": 1571208161291,
  "acls": [
    {
      "type": "USER",
      "name": "testu...</msg>
<status status="PASS" endtime="20191016 06:42:44.298" starttime="20191016 06:42:41.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20191016 06:42:44.299" starttime="20191016 06:42:44.299"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | grep -Ev 'Removed|DEBUG|ERROR|INFO|TRACE|WARN' | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 06:42:44.303" level="INFO">Running command 'ozone sh volume list | grep -Ev 'Removed|DEBUG|ERROR|INFO|TRACE|WARN' | jq -r '. | select(.name=="09012-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 06:42:47.248" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 06:42:47.248" level="INFO">${output} = {
  "metadata": {},
  "name": "09012-rpcwoport",
  "admin": "root",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": 1571208161291,
  "acls": [
    {
      "type": "USER",
      "name": "testu...</msg>
<status status="PASS" endtime="20191016 06:42:47.248" starttime="20191016 06:42:44.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 06:42:47.249" level="INFO">{
  "metadata": {},
  "name": "09012-rpcwoport",
  "admin": "root",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": 1571208161291,
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" endtime="20191016 06:42:47.250" starttime="20191016 06:42:47.248"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 06:42:47.251" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 06:42:47.251" starttime="20191016 06:42:47.250"></status>
</kw>
<msg timestamp="20191016 06:42:47.252" level="INFO">${result} = {
  "metadata": {},
  "name": "09012-rpcwoport",
  "admin": "root",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": 1571208161291,
  "acls": [
    {
      "type": "USER",
      "name": "testu...</msg>
<status status="PASS" endtime="20191016 06:42:47.252" starttime="20191016 06:42:44.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20191016 06:42:47.253" starttime="20191016 06:42:47.252"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 06:42:47.256" level="INFO">Running command 'ozone sh volume update o3://om:9862/09012-rpcwoport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 06:42:50.070" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 06:42:50.070" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191016 06:42:50.070" starttime="20191016 06:42:47.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 06:42:50.071" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "name" : "09012-rpcwoport",
  "admin" : "root",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "creationTime" : 1571208161291,
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" endtime="20191016 06:42:50.072" starttime="20191016 06:42:50.070"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 06:42:50.073" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 06:42:50.073" starttime="20191016 06:42:50.072"></status>
</kw>
<status status="PASS" endtime="20191016 06:42:50.073" starttime="20191016 06:42:47.253"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | grep -Ev 'Removed|WARN|DEBUG|ERROR|INFO|TRACE' | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 06:42:50.077" level="INFO">Running command 'ozone sh volume info o3://om:9862/09012-rpcwoport | grep -Ev 'Removed|WARN|DEBUG|ERROR|INFO|TRACE' | jq -r '. | select(.name=="09012-rpcwoport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 06:42:52.708" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 06:42:52.709" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20191016 06:42:52.709" starttime="20191016 06:42:50.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 06:42:52.710" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20191016 06:42:52.711" starttime="20191016 06:42:52.709"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 06:42:52.712" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 06:42:52.712" starttime="20191016 06:42:52.711"></status>
</kw>
<msg timestamp="20191016 06:42:52.712" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20191016 06:42:52.713" starttime="20191016 06:42:50.073"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20191016 06:42:52.714" starttime="20191016 06:42:52.713"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 06:42:52.717" level="INFO">Running command 'ozone sh bucket create o3://om:9862/09012-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 06:42:55.769" level="INFO">${rc} = 255</msg>
<msg timestamp="20191016 06:42:55.769" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191016 06:42:55.769" starttime="20191016 06:42:52.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 06:42:55.771" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_NOT_FOUND Bucket bb1 is not found</msg>
<status status="PASS" endtime="20191016 06:42:55.771" starttime="20191016 06:42:55.770"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 06:42:55.772" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191016 06:42:55.773" level="FAIL">255 != 0</msg>
<status status="FAIL" endtime="20191016 06:42:55.773" starttime="20191016 06:42:55.771"></status>
</kw>
<status status="FAIL" endtime="20191016 06:42:55.773" starttime="20191016 06:42:52.714"></status>
</kw>
<status status="FAIL" endtime="20191016 06:42:55.774" starttime="20191016 06:42:38.685"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="FAIL" endtime="20191016 06:42:55.774" critical="yes" starttime="20191016 06:42:38.641">255 != 0</status>
</test>
<test id="s1-s2-t2" name="RpcClient volume acls">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 06:42:55.781" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 06:42:55.788" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 06:42:55.788" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20191016 06:42:55.788" starttime="20191016 06:42:55.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 06:42:55.790" level="INFO">scm</msg>
<status status="PASS" endtime="20191016 06:42:55.790" starttime="20191016 06:42:55.789"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 06:42:55.791" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 06:42:55.791" starttime="20191016 06:42:55.790"></status>
</kw>
<msg timestamp="20191016 06:42:55.792" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20191016 06:42:55.792" starttime="20191016 06:42:55.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20191016 06:42:55.793" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20191016 06:42:55.793" starttime="20191016 06:42:55.792"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 06:42:55.798" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 06:42:55.817" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 06:42:55.817" level="INFO">${output} = </msg>
<status status="PASS" endtime="20191016 06:42:55.817" starttime="20191016 06:42:55.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 06:42:55.819" level="INFO"></msg>
<status status="PASS" endtime="20191016 06:42:55.819" starttime="20191016 06:42:55.818"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 06:42:55.820" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 06:42:55.820" starttime="20191016 06:42:55.819"></status>
</kw>
<status status="PASS" endtime="20191016 06:42:55.820" starttime="20191016 06:42:55.794"></status>
</kw>
<status status="PASS" endtime="20191016 06:42:55.820" starttime="20191016 06:42:55.793"></status>
</kw>
<status status="PASS" endtime="20191016 06:42:55.821" starttime="20191016 06:42:55.777"></status>
</kw>
<status status="PASS" endtime="20191016 06:42:55.821" starttime="20191016 06:42:55.776"></status>
</kw>
<kw name="Test Volume Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 06:42:55.825" level="INFO">Running command 'ozone sh volume create o3://om:9862/09012-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 06:42:58.771" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 06:42:58.772" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191016 06:42:58.772" starttime="20191016 06:42:55.823"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 06:42:58.773" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20191016 06:42:58.774" starttime="20191016 06:42:58.772"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 06:42:58.774" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 06:42:58.775" starttime="20191016 06:42:58.774"></status>
</kw>
<status status="PASS" endtime="20191016 06:42:58.775" starttime="20191016 06:42:55.822"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 06:42:58.778" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/09012-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 06:43:01.658" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 06:43:01.658" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191016 06:43:01.658" starttime="20191016 06:42:58.776"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 06:43:01.660" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20191016 06:43:01.660" starttime="20191016 06:43:01.659"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 06:43:01.661" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 06:43:01.661" starttime="20191016 06:43:01.661"></status>
</kw>
<msg timestamp="20191016 06:43:01.662" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191016 06:43:01.662" starttime="20191016 06:42:58.775"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" endtime="20191016 06:43:01.664" starttime="20191016 06:43:01.662"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 06:43:01.667" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/09012-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 06:43:04.451" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 06:43:04.452" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191016 06:43:04.452" starttime="20191016 06:43:01.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 06:43:04.454" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
Acl added successfully: true</msg>
<status status="PASS" endtime="20191016 06:43:04.454" starttime="20191016 06:43:04.452"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 06:43:04.455" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 06:43:04.455" starttime="20191016 06:43:04.454"></status>
</kw>
<msg timestamp="20191016 06:43:04.456" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191016 06:43:04.456" starttime="20191016 06:43:01.664"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 06:43:04.460" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/09012-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 06:43:07.368" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 06:43:07.368" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191016 06:43:07.368" starttime="20191016 06:43:04.458"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 06:43:07.370" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20191016 06:43:07.370" starttime="20191016 06:43:07.369"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 06:43:07.371" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 06:43:07.371" starttime="20191016 06:43:07.370"></status>
</kw>
<msg timestamp="20191016 06:43:07.372" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191016 06:43:07.372" starttime="20191016 06:43:04.456"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" endtime="20191016 06:43:07.374" starttime="20191016 06:43:07.372"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 06:43:07.378" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/09012-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 06:43:10.092" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 06:43:10.092" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191016 06:43:10.092" starttime="20191016 06:43:07.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 06:43:10.094" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
Acl removed successfully: false</msg>
<status status="PASS" endtime="20191016 06:43:10.094" starttime="20191016 06:43:10.093"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 06:43:10.094" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 06:43:10.095" starttime="20191016 06:43:10.094"></status>
</kw>
<msg timestamp="20191016 06:43:10.095" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191016 06:43:10.095" starttime="20191016 06:43:07.375"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 06:43:10.098" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/09012-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 06:43:12.731" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 06:43:12.731" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191016 06:43:12.731" starttime="20191016 06:43:10.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 06:43:12.733" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20191016 06:43:12.734" starttime="20191016 06:43:12.732"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 06:43:12.735" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 06:43:12.735" starttime="20191016 06:43:12.734"></status>
</kw>
<msg timestamp="20191016 06:43:12.736" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191016 06:43:12.736" starttime="20191016 06:43:10.095"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" endtime="20191016 06:43:12.738" starttime="20191016 06:43:12.736"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 06:43:12.742" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/09012-rpcwoport2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 06:43:15.409" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 06:43:15.409" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191016 06:43:15.409" starttime="20191016 06:43:12.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 06:43:15.411" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
 acls103 user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]Acl set successfully: true</msg>
<status status="PASS" endtime="20191016 06:43:15.411" starttime="20191016 06:43:15.410"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 06:43:15.412" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 06:43:15.413" starttime="20191016 06:43:15.412"></status>
</kw>
<msg timestamp="20191016 06:43:15.413" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191016 06:43:15.413" starttime="20191016 06:43:12.739"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 06:43:15.418" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/09012-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 06:43:18.004" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 06:43:18.005" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191016 06:43:18.005" starttime="20191016 06:43:15.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 06:43:18.007" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20191016 06:43:18.007" starttime="20191016 06:43:18.006"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 06:43:18.008" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 06:43:18.009" starttime="20191016 06:43:18.007"></status>
</kw>
<msg timestamp="20191016 06:43:18.009" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191016 06:43:18.009" starttime="20191016 06:43:15.414"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" endtime="20191016 06:43:18.011" starttime="20191016 06:43:18.010"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" endtime="20191016 06:43:18.013" starttime="20191016 06:43:18.011"></status>
</kw>
<status status="PASS" endtime="20191016 06:43:18.014" starttime="20191016 06:42:55.821"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20191016 06:43:18.014" critical="yes" starttime="20191016 06:42:55.775"></status>
</test>
<test id="s1-s2-t3" name="RpcClient bucket acls">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 06:43:18.021" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 06:43:18.028" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 06:43:18.028" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20191016 06:43:18.028" starttime="20191016 06:43:18.019"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 06:43:18.030" level="INFO">scm</msg>
<status status="PASS" endtime="20191016 06:43:18.030" starttime="20191016 06:43:18.029"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 06:43:18.031" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 06:43:18.032" starttime="20191016 06:43:18.031"></status>
</kw>
<msg timestamp="20191016 06:43:18.032" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20191016 06:43:18.032" starttime="20191016 06:43:18.018"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20191016 06:43:18.033" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20191016 06:43:18.034" starttime="20191016 06:43:18.033"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 06:43:18.038" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 06:43:18.080" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 06:43:18.080" level="INFO">${output} = </msg>
<status status="PASS" endtime="20191016 06:43:18.080" starttime="20191016 06:43:18.036"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 06:43:18.082" level="INFO"></msg>
<status status="PASS" endtime="20191016 06:43:18.082" starttime="20191016 06:43:18.081"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 06:43:18.083" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 06:43:18.084" starttime="20191016 06:43:18.083"></status>
</kw>
<status status="PASS" endtime="20191016 06:43:18.084" starttime="20191016 06:43:18.035"></status>
</kw>
<status status="PASS" endtime="20191016 06:43:18.084" starttime="20191016 06:43:18.034"></status>
</kw>
<status status="PASS" endtime="20191016 06:43:18.085" starttime="20191016 06:43:18.017"></status>
</kw>
<status status="PASS" endtime="20191016 06:43:18.085" starttime="20191016 06:43:18.016"></status>
</kw>
<kw name="Test Bucket Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 06:43:18.090" level="INFO">Running command 'ozone sh bucket create o3://om:9862/09012-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 06:43:20.809" level="INFO">${rc} = 255</msg>
<msg timestamp="20191016 06:43:20.809" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191016 06:43:20.809" starttime="20191016 06:43:18.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 06:43:20.811" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_NOT_FOUND Bucket bb1 is not found</msg>
<status status="PASS" endtime="20191016 06:43:20.812" starttime="20191016 06:43:20.810"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 06:43:20.813" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191016 06:43:20.814" level="FAIL">255 != 0</msg>
<status status="FAIL" endtime="20191016 06:43:20.814" starttime="20191016 06:43:20.812"></status>
</kw>
<status status="FAIL" endtime="20191016 06:43:20.814" starttime="20191016 06:43:18.086"></status>
</kw>
<status status="FAIL" endtime="20191016 06:43:20.815" starttime="20191016 06:43:18.085"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="FAIL" endtime="20191016 06:43:20.815" critical="yes" starttime="20191016 06:43:18.015">255 != 0</status>
</test>
<test id="s1-s2-t4" name="RpcClient key acls">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 06:43:20.823" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 06:43:20.830" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 06:43:20.830" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20191016 06:43:20.830" starttime="20191016 06:43:20.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 06:43:20.832" level="INFO">scm</msg>
<status status="PASS" endtime="20191016 06:43:20.832" starttime="20191016 06:43:20.831"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 06:43:20.833" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 06:43:20.833" starttime="20191016 06:43:20.832"></status>
</kw>
<msg timestamp="20191016 06:43:20.834" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20191016 06:43:20.834" starttime="20191016 06:43:20.820"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20191016 06:43:20.835" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20191016 06:43:20.835" starttime="20191016 06:43:20.834"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 06:43:20.840" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 06:43:20.868" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 06:43:20.868" level="INFO">${output} = </msg>
<status status="PASS" endtime="20191016 06:43:20.868" starttime="20191016 06:43:20.838"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 06:43:20.870" level="INFO"></msg>
<status status="PASS" endtime="20191016 06:43:20.870" starttime="20191016 06:43:20.869"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 06:43:20.871" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 06:43:20.871" starttime="20191016 06:43:20.870"></status>
</kw>
<status status="PASS" endtime="20191016 06:43:20.871" starttime="20191016 06:43:20.837"></status>
</kw>
<status status="PASS" endtime="20191016 06:43:20.871" starttime="20191016 06:43:20.836"></status>
</kw>
<status status="PASS" endtime="20191016 06:43:20.872" starttime="20191016 06:43:20.819"></status>
</kw>
<status status="PASS" endtime="20191016 06:43:20.872" starttime="20191016 06:43:20.818"></status>
</kw>
<kw name="Test key Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 06:43:20.876" level="INFO">Running command 'ozone sh key put o3://om:9862/09012-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 06:43:23.715" level="INFO">${rc} = 255</msg>
<msg timestamp="20191016 06:43:23.715" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191016 06:43:23.716" starttime="20191016 06:43:20.874"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 06:43:23.718" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_NOT_FOUND Bucket bb1 is not found</msg>
<status status="PASS" endtime="20191016 06:43:23.718" starttime="20191016 06:43:23.716"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 06:43:23.719" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191016 06:43:23.720" level="FAIL">255 != 0</msg>
<status status="FAIL" endtime="20191016 06:43:23.720" starttime="20191016 06:43:23.718"></status>
</kw>
<status status="FAIL" endtime="20191016 06:43:23.721" starttime="20191016 06:43:20.873"></status>
</kw>
<status status="FAIL" endtime="20191016 06:43:23.721" starttime="20191016 06:43:20.872"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="FAIL" endtime="20191016 06:43:23.722" critical="yes" starttime="20191016 06:43:20.816">255 != 0</status>
</test>
<test id="s1-s2-t5" name="RpcClient without host">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 06:43:23.731" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 06:43:23.738" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 06:43:23.739" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20191016 06:43:23.739" starttime="20191016 06:43:23.728"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 06:43:23.741" level="INFO">scm</msg>
<status status="PASS" endtime="20191016 06:43:23.741" starttime="20191016 06:43:23.740"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 06:43:23.742" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 06:43:23.742" starttime="20191016 06:43:23.741"></status>
</kw>
<msg timestamp="20191016 06:43:23.743" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20191016 06:43:23.743" starttime="20191016 06:43:23.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20191016 06:43:23.745" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20191016 06:43:23.745" starttime="20191016 06:43:23.744"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 06:43:23.750" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 06:43:23.780" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 06:43:23.780" level="INFO">${output} = </msg>
<status status="PASS" endtime="20191016 06:43:23.780" starttime="20191016 06:43:23.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 06:43:23.782" level="INFO"></msg>
<status status="PASS" endtime="20191016 06:43:23.782" starttime="20191016 06:43:23.781"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 06:43:23.784" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 06:43:23.784" starttime="20191016 06:43:23.783"></status>
</kw>
<status status="PASS" endtime="20191016 06:43:23.785" starttime="20191016 06:43:23.746"></status>
</kw>
<status status="PASS" endtime="20191016 06:43:23.785" starttime="20191016 06:43:23.745"></status>
</kw>
<status status="PASS" endtime="20191016 06:43:23.785" starttime="20191016 06:43:23.725"></status>
</kw>
<status status="PASS" endtime="20191016 06:43:23.785" starttime="20191016 06:43:23.724"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 06:43:23.791" level="INFO">Running command 'ozone sh volume create o3:///09012-rpcwport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 06:43:26.615" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 06:43:26.615" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191016 06:43:26.615" starttime="20191016 06:43:23.788"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 06:43:26.617" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20191016 06:43:26.618" starttime="20191016 06:43:26.616"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 06:43:26.619" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 06:43:26.619" starttime="20191016 06:43:26.618"></status>
</kw>
<msg timestamp="20191016 06:43:26.620" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191016 06:43:26.620" starttime="20191016 06:43:23.787"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20191016 06:43:26.621" starttime="20191016 06:43:26.620"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | grep -Ev 'Removed|WARN|DEBUG|ERROR|INFO|TRACE' | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 06:43:26.626" level="INFO">Running command 'ozone sh volume list o3:/// | grep -Ev 'Removed|WARN|DEBUG|ERROR|INFO|TRACE' | jq -r '. | select(.name=="09012-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 06:43:29.554" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 06:43:29.554" level="INFO">${output} = {
  "metadata": {},
  "name": "09012-rpcwport",
  "admin": "root",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": 1571208206537,
  "acls": [
    {
      "type": "USER",
      "name": "testus...</msg>
<status status="PASS" endtime="20191016 06:43:29.554" starttime="20191016 06:43:26.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 06:43:29.557" level="INFO">{
  "metadata": {},
  "name": "09012-rpcwport",
  "admin": "root",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": 1571208206537,
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" endtime="20191016 06:43:29.557" starttime="20191016 06:43:29.555"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 06:43:29.558" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 06:43:29.558" starttime="20191016 06:43:29.557"></status>
</kw>
<msg timestamp="20191016 06:43:29.559" level="INFO">${result} = {
  "metadata": {},
  "name": "09012-rpcwport",
  "admin": "root",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": 1571208206537,
  "acls": [
    {
      "type": "USER",
      "name": "testus...</msg>
<status status="PASS" endtime="20191016 06:43:29.559" starttime="20191016 06:43:26.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20191016 06:43:29.560" starttime="20191016 06:43:29.560"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | grep -Ev 'Removed|DEBUG|ERROR|INFO|TRACE|WARN' | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 06:43:29.565" level="INFO">Running command 'ozone sh volume list | grep -Ev 'Removed|DEBUG|ERROR|INFO|TRACE|WARN' | jq -r '. | select(.name=="09012-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 06:43:32.287" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 06:43:32.287" level="INFO">${output} = {
  "metadata": {},
  "name": "09012-rpcwport",
  "admin": "root",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": 1571208206537,
  "acls": [
    {
      "type": "USER",
      "name": "testus...</msg>
<status status="PASS" endtime="20191016 06:43:32.287" starttime="20191016 06:43:29.562"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 06:43:32.289" level="INFO">{
  "metadata": {},
  "name": "09012-rpcwport",
  "admin": "root",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": 1571208206537,
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" endtime="20191016 06:43:32.289" starttime="20191016 06:43:32.288"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 06:43:32.290" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 06:43:32.290" starttime="20191016 06:43:32.289"></status>
</kw>
<msg timestamp="20191016 06:43:32.290" level="INFO">${result} = {
  "metadata": {},
  "name": "09012-rpcwport",
  "admin": "root",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": 1571208206537,
  "acls": [
    {
      "type": "USER",
      "name": "testus...</msg>
<status status="PASS" endtime="20191016 06:43:32.291" starttime="20191016 06:43:29.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20191016 06:43:32.291" starttime="20191016 06:43:32.291"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 06:43:32.295" level="INFO">Running command 'ozone sh volume update o3:///09012-rpcwport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 06:43:35.256" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 06:43:35.256" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191016 06:43:35.256" starttime="20191016 06:43:32.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 06:43:35.258" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "name" : "09012-rpcwport",
  "admin" : "root",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "creationTime" : 1571208206537,
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" endtime="20191016 06:43:35.258" starttime="20191016 06:43:35.257"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 06:43:35.259" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 06:43:35.260" starttime="20191016 06:43:35.259"></status>
</kw>
<status status="PASS" endtime="20191016 06:43:35.260" starttime="20191016 06:43:32.292"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | grep -Ev 'Removed|WARN|DEBUG|ERROR|INFO|TRACE' | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 06:43:35.264" level="INFO">Running command 'ozone sh volume info o3:///09012-rpcwport | grep -Ev 'Removed|WARN|DEBUG|ERROR|INFO|TRACE' | jq -r '. | select(.name=="09012-rpcwport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 06:43:38.069" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 06:43:38.069" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20191016 06:43:38.069" starttime="20191016 06:43:35.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 06:43:38.070" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20191016 06:43:38.070" starttime="20191016 06:43:38.069"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 06:43:38.071" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 06:43:38.071" starttime="20191016 06:43:38.071"></status>
</kw>
<msg timestamp="20191016 06:43:38.072" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20191016 06:43:38.072" starttime="20191016 06:43:35.260"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20191016 06:43:38.073" starttime="20191016 06:43:38.072"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 06:43:38.076" level="INFO">Running command 'ozone sh bucket create o3:///09012-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 06:43:40.925" level="INFO">${rc} = 255</msg>
<msg timestamp="20191016 06:43:40.926" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191016 06:43:40.926" starttime="20191016 06:43:38.074"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 06:43:40.928" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_NOT_FOUND Bucket bb1 is not found</msg>
<status status="PASS" endtime="20191016 06:43:40.928" starttime="20191016 06:43:40.927"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 06:43:40.929" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191016 06:43:40.930" level="FAIL">255 != 0</msg>
<status status="FAIL" endtime="20191016 06:43:40.930" starttime="20191016 06:43:40.929"></status>
</kw>
<status status="FAIL" endtime="20191016 06:43:40.931" starttime="20191016 06:43:38.073"></status>
</kw>
<status status="FAIL" endtime="20191016 06:43:40.931" starttime="20191016 06:43:23.786"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="FAIL" endtime="20191016 06:43:40.932" critical="yes" starttime="20191016 06:43:23.723">255 != 0</status>
</test>
<test id="s1-s2-t6" name="RpcClient without scheme">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 06:43:40.940" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 06:43:40.947" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 06:43:40.947" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20191016 06:43:40.947" starttime="20191016 06:43:40.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 06:43:40.949" level="INFO">scm</msg>
<status status="PASS" endtime="20191016 06:43:40.949" starttime="20191016 06:43:40.948"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 06:43:40.950" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 06:43:40.951" starttime="20191016 06:43:40.950"></status>
</kw>
<msg timestamp="20191016 06:43:40.951" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20191016 06:43:40.951" starttime="20191016 06:43:40.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20191016 06:43:40.953" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20191016 06:43:40.953" starttime="20191016 06:43:40.952"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 06:43:40.958" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 06:43:40.976" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 06:43:40.976" level="INFO">${output} = </msg>
<status status="PASS" endtime="20191016 06:43:40.976" starttime="20191016 06:43:40.956"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 06:43:40.978" level="INFO"></msg>
<status status="PASS" endtime="20191016 06:43:40.978" starttime="20191016 06:43:40.977"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 06:43:40.979" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 06:43:40.979" starttime="20191016 06:43:40.978"></status>
</kw>
<status status="PASS" endtime="20191016 06:43:40.980" starttime="20191016 06:43:40.955"></status>
</kw>
<status status="PASS" endtime="20191016 06:43:40.980" starttime="20191016 06:43:40.953"></status>
</kw>
<status status="PASS" endtime="20191016 06:43:40.980" starttime="20191016 06:43:40.935"></status>
</kw>
<status status="PASS" endtime="20191016 06:43:40.981" starttime="20191016 06:43:40.934"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 06:43:40.987" level="INFO">Running command 'ozone sh volume create /09012-rpcwoscheme --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 06:43:43.749" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 06:43:43.749" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191016 06:43:43.749" starttime="20191016 06:43:40.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 06:43:43.751" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20191016 06:43:43.752" starttime="20191016 06:43:43.750"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 06:43:43.753" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 06:43:43.753" starttime="20191016 06:43:43.752"></status>
</kw>
<msg timestamp="20191016 06:43:43.754" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191016 06:43:43.754" starttime="20191016 06:43:40.982"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20191016 06:43:43.755" starttime="20191016 06:43:43.754"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | grep -Ev 'Removed|WARN|DEBUG|ERROR|INFO|TRACE' | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 06:43:43.760" level="INFO">Running command 'ozone sh volume list / | grep -Ev 'Removed|WARN|DEBUG|ERROR|INFO|TRACE' | jq -r '. | select(.name=="09012-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 06:43:46.696" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 06:43:46.696" level="INFO">${output} = {
  "metadata": {},
  "name": "09012-rpcwoscheme",
  "admin": "root",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": 1571208223629,
  "acls": [
    {
      "type": "USER",
      "name": "tes...</msg>
<status status="PASS" endtime="20191016 06:43:46.696" starttime="20191016 06:43:43.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 06:43:46.697" level="INFO">{
  "metadata": {},
  "name": "09012-rpcwoscheme",
  "admin": "root",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": 1571208223629,
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" endtime="20191016 06:43:46.698" starttime="20191016 06:43:46.697"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 06:43:46.698" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 06:43:46.699" starttime="20191016 06:43:46.698"></status>
</kw>
<msg timestamp="20191016 06:43:46.699" level="INFO">${result} = {
  "metadata": {},
  "name": "09012-rpcwoscheme",
  "admin": "root",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": 1571208223629,
  "acls": [
    {
      "type": "USER",
      "name": "tes...</msg>
<status status="PASS" endtime="20191016 06:43:46.699" starttime="20191016 06:43:43.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20191016 06:43:46.700" starttime="20191016 06:43:46.699"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | grep -Ev 'Removed|DEBUG|ERROR|INFO|TRACE|WARN' | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 06:43:46.703" level="INFO">Running command 'ozone sh volume list | grep -Ev 'Removed|DEBUG|ERROR|INFO|TRACE|WARN' | jq -r '. | select(.name=="09012-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 06:43:49.528" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 06:43:49.529" level="INFO">${output} = {
  "metadata": {},
  "name": "09012-rpcwoscheme",
  "admin": "root",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": 1571208223629,
  "acls": [
    {
      "type": "USER",
      "name": "tes...</msg>
<status status="PASS" endtime="20191016 06:43:49.529" starttime="20191016 06:43:46.701"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 06:43:49.530" level="INFO">{
  "metadata": {},
  "name": "09012-rpcwoscheme",
  "admin": "root",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": 1571208223629,
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" endtime="20191016 06:43:49.530" starttime="20191016 06:43:49.529"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 06:43:49.531" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 06:43:49.531" starttime="20191016 06:43:49.531"></status>
</kw>
<msg timestamp="20191016 06:43:49.532" level="INFO">${result} = {
  "metadata": {},
  "name": "09012-rpcwoscheme",
  "admin": "root",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": 1571208223629,
  "acls": [
    {
      "type": "USER",
      "name": "tes...</msg>
<status status="PASS" endtime="20191016 06:43:49.532" starttime="20191016 06:43:46.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20191016 06:43:49.533" starttime="20191016 06:43:49.532"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 06:43:49.536" level="INFO">Running command 'ozone sh volume update /09012-rpcwoscheme --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 06:43:52.289" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 06:43:52.289" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191016 06:43:52.289" starttime="20191016 06:43:49.534"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 06:43:52.291" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "name" : "09012-rpcwoscheme",
  "admin" : "root",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "creationTime" : 1571208223629,
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" endtime="20191016 06:43:52.291" starttime="20191016 06:43:52.290"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 06:43:52.292" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 06:43:52.292" starttime="20191016 06:43:52.291"></status>
</kw>
<status status="PASS" endtime="20191016 06:43:52.292" starttime="20191016 06:43:49.533"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | grep -Ev 'Removed|WARN|DEBUG|ERROR|INFO|TRACE' | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 06:43:52.296" level="INFO">Running command 'ozone sh volume info /09012-rpcwoscheme | grep -Ev 'Removed|WARN|DEBUG|ERROR|INFO|TRACE' | jq -r '. | select(.name=="09012-rpcwoscheme") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 06:43:55.188" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 06:43:55.188" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20191016 06:43:55.188" starttime="20191016 06:43:52.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 06:43:55.190" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20191016 06:43:55.190" starttime="20191016 06:43:55.189"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 06:43:55.191" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 06:43:55.191" starttime="20191016 06:43:55.190"></status>
</kw>
<msg timestamp="20191016 06:43:55.191" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20191016 06:43:55.191" starttime="20191016 06:43:52.293"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20191016 06:43:55.192" starttime="20191016 06:43:55.192"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 06:43:55.195" level="INFO">Running command 'ozone sh bucket create /09012-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 06:43:57.824" level="INFO">${rc} = 255</msg>
<msg timestamp="20191016 06:43:57.824" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191016 06:43:57.824" starttime="20191016 06:43:55.194"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 06:43:57.826" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_NOT_FOUND Bucket bb1 is not found</msg>
<status status="PASS" endtime="20191016 06:43:57.826" starttime="20191016 06:43:57.825"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 06:43:57.826" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191016 06:43:57.828" level="FAIL">255 != 0</msg>
<status status="FAIL" endtime="20191016 06:43:57.828" starttime="20191016 06:43:57.826"></status>
</kw>
<status status="FAIL" endtime="20191016 06:43:57.828" starttime="20191016 06:43:55.193"></status>
</kw>
<status status="FAIL" endtime="20191016 06:43:57.829" starttime="20191016 06:43:40.981"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="FAIL" endtime="20191016 06:43:57.829" critical="yes" starttime="20191016 06:43:40.933">255 != 0</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" endtime="20191016 06:43:57.831" starttime="20191016 06:42:38.628"></status>
</suite>
<status status="FAIL" endtime="20191016 06:43:57.835" starttime="20191016 06:42:29.691"></status>
</suite>
<statistics>
<total>
<stat fail="6" pass="2">Critical Tests</stat>
<stat fail="6" pass="2">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="6" id="s1" name="ozonesecure-basic" pass="2">ozonesecure-basic</stat>
<stat fail="1" id="s1-s1" name="Basic" pass="1">ozonesecure-basic.Basic</stat>
<stat fail="5" id="s1-s2" name="Ozone-Shell" pass="1">ozonesecure-basic.Ozone-Shell</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
