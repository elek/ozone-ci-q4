<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20191015 08:45:27.431" generator="Robot 3.1.2 (Python 2.7.5 on linux2)">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1" name="hadoop32-createmrenv">
<test id="s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191015 08:45:27.522" level="INFO">Running command 'ozone sh bucket info /vol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20191015 08:45:30.453" level="INFO">${rc} = 255</msg>
<msg timestamp="20191015 08:45:30.454" level="INFO">${output} = VOLUME_NOT_FOUND Volume vol1 is not found</msg>
<status status="PASS" endtime="20191015 08:45:30.454" starttime="20191015 08:45:27.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191015 08:45:30.456" level="INFO">VOLUME_NOT_FOUND Volume vol1 is not found</msg>
<status status="PASS" endtime="20191015 08:45:30.456" starttime="20191015 08:45:30.455"></status>
</kw>
<msg timestamp="20191015 08:45:30.457" level="INFO">${result} = VOLUME_NOT_FOUND Volume vol1 is not found</msg>
<status status="PASS" endtime="20191015 08:45:30.457" starttime="20191015 08:45:27.519"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191015 08:45:30.463" level="INFO">Running command 'ozone sh volume create /vol1 --user hadoop --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20191015 08:45:32.807" level="INFO">${rc} = 0</msg>
<msg timestamp="20191015 08:45:32.807" level="INFO">${output} = </msg>
<status status="PASS" endtime="20191015 08:45:32.807" starttime="20191015 08:45:30.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191015 08:45:32.809" level="INFO"></msg>
<status status="PASS" endtime="20191015 08:45:32.809" starttime="20191015 08:45:32.808"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191015 08:45:32.810" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191015 08:45:32.810" starttime="20191015 08:45:32.809"></status>
</kw>
<msg timestamp="20191015 08:45:32.811" level="INFO">${result} = </msg>
<status status="PASS" endtime="20191015 08:45:32.811" starttime="20191015 08:45:30.459"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20191015 08:45:32.812" starttime="20191015 08:45:32.811"></status>
</kw>
<status status="PASS" endtime="20191015 08:45:32.812" starttime="20191015 08:45:30.459"></status>
</kw>
<status status="PASS" endtime="20191015 08:45:32.812" starttime="20191015 08:45:30.458"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191015 08:45:32.819" level="INFO">Running command 'ozone sh bucket create /vol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20191015 08:45:35.183" level="INFO">${rc} = 0</msg>
<msg timestamp="20191015 08:45:35.183" level="INFO">${output} = </msg>
<status status="PASS" endtime="20191015 08:45:35.183" starttime="20191015 08:45:32.815"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191015 08:45:35.185" level="INFO"></msg>
<status status="PASS" endtime="20191015 08:45:35.186" starttime="20191015 08:45:35.184"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191015 08:45:35.187" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191015 08:45:35.187" starttime="20191015 08:45:35.186"></status>
</kw>
<status status="PASS" endtime="20191015 08:45:35.188" starttime="20191015 08:45:32.814"></status>
</kw>
<status status="PASS" endtime="20191015 08:45:35.188" starttime="20191015 08:45:32.813"></status>
</kw>
<status status="PASS" endtime="20191015 08:45:35.188" starttime="20191015 08:45:32.812"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20191015 08:45:35.189" starttime="20191015 08:45:35.188"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191015 08:45:35.194" level="INFO">Running command 'ozone sh bucket info /vol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20191015 08:45:37.463" level="INFO">${rc} = 0</msg>
<msg timestamp="20191015 08:45:37.464" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "vol1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : 1571129135113,
  "encryptionKeyName" : null
}</msg>
<status status="PASS" endtime="20191015 08:45:37.464" starttime="20191015 08:45:35.191"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191015 08:45:37.466" level="INFO">{
  "metadata" : { },
  "volumeName" : "vol1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : 1571129135113,
  "encryptionKeyName" : null
}</msg>
<status status="PASS" endtime="20191015 08:45:37.466" starttime="20191015 08:45:37.464"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191015 08:45:37.467" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191015 08:45:37.467" starttime="20191015 08:45:37.466"></status>
</kw>
<msg timestamp="20191015 08:45:37.468" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "vol1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : 1571129135113,
  "encryptionKeyName" : null
}</msg>
<status status="PASS" endtime="20191015 08:45:37.468" starttime="20191015 08:45:35.190"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20191015 08:45:37.469" starttime="20191015 08:45:37.468"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put /vol1/bucket1/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191015 08:45:37.472" level="INFO">Running command 'ozone sh key put /vol1/bucket1/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20191015 08:45:39.832" level="INFO">${rc} = 255</msg>
<msg timestamp="20191015 08:45:39.832" level="INFO">${output} = SCM_IN_SAFE_MODE SafeModePrecheck failed for allocateBlock</msg>
<status status="PASS" endtime="20191015 08:45:39.832" starttime="20191015 08:45:37.470"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191015 08:45:39.834" level="INFO">SCM_IN_SAFE_MODE SafeModePrecheck failed for allocateBlock</msg>
<status status="PASS" endtime="20191015 08:45:39.835" starttime="20191015 08:45:39.833"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191015 08:45:39.836" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191015 08:45:39.836" level="FAIL">255 != 0</msg>
<status status="FAIL" endtime="20191015 08:45:39.837" starttime="20191015 08:45:39.835"></status>
</kw>
<status status="FAIL" endtime="20191015 08:45:39.837" starttime="20191015 08:45:37.469"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="FAIL" endtime="20191015 08:45:39.838" critical="yes" starttime="20191015 08:45:27.518">255 != 0</status>
</test>
<test id="s1-t2" name="Create user dir for hadoop">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone fs -mkdir /user</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191015 08:45:39.844" level="INFO">Running command 'ozone fs -mkdir /user 2&gt;&amp;1'.</msg>
<msg timestamp="20191015 08:45:42.638" level="INFO">${rc} = 0</msg>
<msg timestamp="20191015 08:45:42.638" level="INFO">${output} = </msg>
<status status="PASS" endtime="20191015 08:45:42.638" starttime="20191015 08:45:39.841"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191015 08:45:42.640" level="INFO"></msg>
<status status="PASS" endtime="20191015 08:45:42.641" starttime="20191015 08:45:42.639"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191015 08:45:42.642" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191015 08:45:42.642" starttime="20191015 08:45:42.641"></status>
</kw>
<status status="PASS" endtime="20191015 08:45:42.643" starttime="20191015 08:45:39.840"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone fs -mkdir /user/hadoop</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191015 08:45:42.647" level="INFO">Running command 'ozone fs -mkdir /user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20191015 08:45:45.285" level="INFO">${rc} = 0</msg>
<msg timestamp="20191015 08:45:45.285" level="INFO">${output} = </msg>
<status status="PASS" endtime="20191015 08:45:45.285" starttime="20191015 08:45:42.644"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191015 08:45:45.287" level="INFO"></msg>
<status status="PASS" endtime="20191015 08:45:45.287" starttime="20191015 08:45:45.286"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191015 08:45:45.288" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191015 08:45:45.288" starttime="20191015 08:45:45.287"></status>
</kw>
<status status="PASS" endtime="20191015 08:45:45.288" starttime="20191015 08:45:42.643"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20191015 08:45:45.288" critical="yes" starttime="20191015 08:45:39.839"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="FAIL" endtime="20191015 08:45:45.290" starttime="20191015 08:45:27.433"></status>
</suite>
<statistics>
<total>
<stat fail="1" pass="1">Critical Tests</stat>
<stat fail="1" pass="1">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="1" id="s1" name="hadoop32-createmrenv" pass="1">hadoop32-createmrenv</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
