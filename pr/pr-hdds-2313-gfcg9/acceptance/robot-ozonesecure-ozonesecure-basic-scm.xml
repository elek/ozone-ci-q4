<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20191016 11:09:22.589" generator="Robot 3.1.2 (Python 2.7.5 on linux2)">
<suite source="/opt/hadoop/smoketest/basic" id="s1" name="ozonesecure-basic">
<suite source="/opt/hadoop/smoketest/basic/basic.robot" id="s1-s1" name="Basic">
<test id="s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 11:09:22.648" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 11:09:22.655" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 11:09:22.655" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20191016 11:09:22.656" starttime="20191016 11:09:22.647"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 11:09:22.657" level="INFO">scm</msg>
<status status="PASS" endtime="20191016 11:09:22.657" starttime="20191016 11:09:22.656"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 11:09:22.658" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 11:09:22.659" starttime="20191016 11:09:22.658"></status>
</kw>
<msg timestamp="20191016 11:09:22.659" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20191016 11:09:22.659" starttime="20191016 11:09:22.646"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 11:09:22.664" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 11:09:22.679" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 11:09:22.679" level="INFO">${output} = </msg>
<status status="PASS" endtime="20191016 11:09:22.679" starttime="20191016 11:09:22.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 11:09:22.680" level="INFO"></msg>
<status status="PASS" endtime="20191016 11:09:22.681" starttime="20191016 11:09:22.680"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 11:09:22.681" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 11:09:22.682" starttime="20191016 11:09:22.681"></status>
</kw>
<status status="PASS" endtime="20191016 11:09:22.682" starttime="20191016 11:09:22.661"></status>
</kw>
<status status="PASS" endtime="20191016 11:09:22.682" starttime="20191016 11:09:22.660"></status>
</kw>
<status status="PASS" endtime="20191016 11:09:22.683" starttime="20191016 11:09:22.646"></status>
</kw>
<status status="PASS" endtime="20191016 11:09:22.683" starttime="20191016 11:09:22.645"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 11:09:22.686" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 11:09:22.731" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 11:09:22.732" level="INFO">${output} = HTTP/1.1 401 Authentication required
Date: Wed, 16 Oct 2019 11:09:22 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Coo...</msg>
<status status="PASS" endtime="20191016 11:09:22.732" starttime="20191016 11:09:22.684"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 11:09:22.734" level="INFO">HTTP/1.1 401 Authentication required
Date: Wed, 16 Oct 2019 11:09:22 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 293

HTTP/1.1 200 OK
Date: Wed, 16 Oct 2019 11:09:22 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCXgzk9TdVjLJN9dQ5reSlAKx3q4bUYLiVgkaYO0r90aE0obr5C7Oe/hYrPYkYN9a1n0gOKx7F/3oreP1RM8OsGCzB
Set-Cookie: hadoop.auth="u=root&amp;p=HTTP/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1571260162722&amp;s=tBRFtoGjbsEUtITl28XE4LuFCS1B4fTmkTNwWbETOhI="; Path=/; HttpOnly
Last-Modified: Wed, 16 Oct 2019 10:34:00 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" endtime="20191016 11:09:22.734" starttime="20191016 11:09:22.733"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 11:09:22.735" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 11:09:22.735" starttime="20191016 11:09:22.734"></status>
</kw>
<msg timestamp="20191016 11:09:22.736" level="INFO">${result} = HTTP/1.1 401 Authentication required
Date: Wed, 16 Oct 2019 11:09:22 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Coo...</msg>
<status status="PASS" endtime="20191016 11:09:22.736" starttime="20191016 11:09:22.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20191016 11:09:22.737" starttime="20191016 11:09:22.736"></status>
</kw>
<status status="PASS" endtime="20191016 11:09:22.737" critical="yes" starttime="20191016 11:09:22.645"></status>
</test>
<test id="s1-s1-t2" name="Start freon testing">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 11:09:22.743" level="INFO">Running command 'ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 11:09:31.416" level="INFO">${rc} = 255</msg>
<msg timestamp="20191016 11:09:31.417" level="INFO">${output} = 2019-10-16 11:09:23,872 INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2019-10-16 11:09:24,046 INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s)...</msg>
<status status="PASS" endtime="20191016 11:09:31.417" starttime="20191016 11:09:22.741"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 11:09:31.419" level="INFO">2019-10-16 11:09:23,872 INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2019-10-16 11:09:24,046 INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2019-10-16 11:09:24,047 INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2019-10-16 11:09:26,308 [main] INFO       - Number of Threads: 1
2019-10-16 11:09:26,310 [main] INFO       - Number of Volumes: 5.
2019-10-16 11:09:26,310 [main] INFO       - Number of Buckets per Volume: 5.
2019-10-16 11:09:26,311 [main] INFO       - Number of Keys per Bucket: 5.
2019-10-16 11:09:26,311 [main] INFO       - Key size: 10240 bytes
2019-10-16 11:09:26,311 [main] INFO       - Buffer size: 4096 bytes
2019-10-16 11:09:26,311 [main] INFO       - validateWrites : false
2019-10-16 11:09:26,317 [main] INFO       - Starting progress bar Thread.

 0.00% |?                                                                                                    |  0/125 Time: 0:00:002019-10-16 11:09:26,355 [pool-2-thread-1] INFO       - Creating Volume: vol-0-13097, with HTTP/scm@EXAMPLE.COM as owner.
2019-10-16 11:09:26,472 [pool-2-thread-1] INFO       - Creating Volume: vol-1-04539, with HTTP/scm@EXAMPLE.COM as owner.
2019-10-16 11:09:26,485 [pool-2-thread-1] INFO       - Creating Volume: vol-2-49254, with HTTP/scm@EXAMPLE.COM as owner.
2019-10-16 11:09:26,498 [pool-2-thread-1] INFO       - Creating Volume: vol-3-21611, with HTTP/scm@EXAMPLE.COM as owner.
2019-10-16 11:09:26,508 [pool-2-thread-1] INFO       - Creating Volume: vol-4-93820, with HTTP/scm@EXAMPLE.COM as owner.
2019-10-16 11:09:26,521 [pool-2-thread-1] INFO       - Creating Bucket: vol-0-13097/bucket-0-05027, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-10-16 11:09:26,546 [pool-2-thread-1] ERROR      - Could not create bucket 
BUCKET_NOT_FOUND org.apache.hadoop.ozone.om.exceptions.OMException: Bucket bucket-0-05027 is not found
	at org.apache.hadoop.ozone.om.protocolPB.OzoneManagerProtocolClientSideTranslatorPB.handleError(OzoneManagerProtocolClientSideTranslatorPB.java:732)
	at org.apache.hadoop.ozone.om.protocolPB.OzoneManagerProtocolClientSideTranslatorPB.createBucket(OzoneManagerProtocolClientSideTranslatorPB.java:577)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.hadoop.hdds.tracing.TraceAllMethod.invoke(TraceAllMethod.java:66)
	at com.sun.proxy.$Proxy21.createBucket(Unknown Source)
	at org.apache.hadoop.ozone.client.rpc.RpcClient.createBucket(RpcClient.java:414)
	at org.apache.hadoop.ozone.client.rpc.RpcClient.createBucket(RpcClient.java:372)
	at org.apache.hadoop.ozone.client.OzoneVolume.createBucket(OzoneVolume.java:209)
	at org.apache.hadoop.ozone.freon.RandomKeyGenerator.createBucket(RandomKeyGenerator.java:660)
	at org.apache.hadoop.ozone.freon.RandomKeyGenerator.access$800(RandomKeyGenerator.java:88)
	at org.apache.hadoop.ozone.freon.RandomKeyGenerator$ObjectCreator.run(RandomKeyGenerator.java:608)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
 0.00% |?                                                                                                    |  0/125 Time: 0:00:01 0.00% |?                                                                                                    |  0/125 Time: 0:00:02 0.00% |?                                                                                                    |  0/125 Time: 0:00:03 0.00% |?                                                                                                    |  0/125 Time: 0:00:04 100.00% |?????????????????????????????????????????????????????????????????????????????????????????????????????|  125/125 Time: 0:00:05
Bucket bucket-0-05027 is not found

***************************************************
Status: Failed
Git Base Revision: e97acb3bd8f3befd27418996fa5d4b50bf2e17bf
Number of Volumes created: 5
Number of Buckets created: 0
Number of Keys added: 0
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,160
Average Time spent in bucket creation: 00:00:00,000
Average Time spent in key creation: 00:00:00,000
Average Time spent in key write: 00:00:00,000
Total bytes written: 0
Total Execution time: 00:00:07,031
***************************************************</msg>
<status status="PASS" endtime="20191016 11:09:31.419" starttime="20191016 11:09:31.418"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 11:09:31.421" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191016 11:09:31.422" level="FAIL">255 != 0</msg>
<status status="FAIL" endtime="20191016 11:09:31.422" starttime="20191016 11:09:31.420"></status>
</kw>
<status status="FAIL" endtime="20191016 11:09:31.422" starttime="20191016 11:09:22.739"></status>
</kw>
<status status="FAIL" endtime="20191016 11:09:31.423" critical="yes" starttime="20191016 11:09:22.738">255 != 0</status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="FAIL" endtime="20191016 11:09:31.424" starttime="20191016 11:09:22.617"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/ozone-shell.robot" id="s1-s2" name="Ozone-Shell">
<kw type="setup" name="Generate prefix">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20191016 11:09:31.440" level="INFO">${random} = 19808</msg>
<status status="PASS" endtime="20191016 11:09:31.441" starttime="20191016 11:09:31.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${prefix}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20191016 11:09:31.442" level="INFO">${prefix} = 19808</msg>
<status status="PASS" endtime="20191016 11:09:31.442" starttime="20191016 11:09:31.441"></status>
</kw>
<status status="PASS" endtime="20191016 11:09:31.442" starttime="20191016 11:09:31.439"></status>
</kw>
<test id="s1-s2-t1" name="RpcClient with port">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 11:09:31.450" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 11:09:31.458" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 11:09:31.458" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20191016 11:09:31.458" starttime="20191016 11:09:31.447"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 11:09:31.460" level="INFO">scm</msg>
<status status="PASS" endtime="20191016 11:09:31.460" starttime="20191016 11:09:31.459"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 11:09:31.461" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 11:09:31.462" starttime="20191016 11:09:31.461"></status>
</kw>
<msg timestamp="20191016 11:09:31.462" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20191016 11:09:31.462" starttime="20191016 11:09:31.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20191016 11:09:31.466" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20191016 11:09:31.466" starttime="20191016 11:09:31.463"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 11:09:31.471" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 11:09:31.488" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 11:09:31.488" level="INFO">${output} = </msg>
<status status="PASS" endtime="20191016 11:09:31.488" starttime="20191016 11:09:31.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 11:09:31.490" level="INFO"></msg>
<status status="PASS" endtime="20191016 11:09:31.490" starttime="20191016 11:09:31.489"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 11:09:31.491" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 11:09:31.491" starttime="20191016 11:09:31.490"></status>
</kw>
<status status="PASS" endtime="20191016 11:09:31.492" starttime="20191016 11:09:31.467"></status>
</kw>
<status status="PASS" endtime="20191016 11:09:31.492" starttime="20191016 11:09:31.466"></status>
</kw>
<status status="PASS" endtime="20191016 11:09:31.492" starttime="20191016 11:09:31.445"></status>
</kw>
<status status="PASS" endtime="20191016 11:09:31.492" starttime="20191016 11:09:31.444"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 11:09:31.497" level="INFO">Running command 'ozone sh volume create o3://om:9862/19808-rpcwoport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 11:09:34.229" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 11:09:34.229" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191016 11:09:34.229" starttime="20191016 11:09:31.495"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 11:09:34.230" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20191016 11:09:34.231" starttime="20191016 11:09:34.230"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 11:09:34.231" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 11:09:34.232" starttime="20191016 11:09:34.231"></status>
</kw>
<msg timestamp="20191016 11:09:34.232" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191016 11:09:34.232" starttime="20191016 11:09:31.494"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20191016 11:09:34.233" starttime="20191016 11:09:34.232"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | grep -Ev 'Removed|WARN|DEBUG|ERROR|INFO|TRACE' | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 11:09:34.236" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | grep -Ev 'Removed|WARN|DEBUG|ERROR|INFO|TRACE' | jq -r '. | select(.name=="19808-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 11:09:37.090" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 11:09:37.090" level="INFO">${output} = {
  "metadata": {},
  "name": "19808-rpcwoport",
  "admin": "root",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": 1571224174128,
  "acls": [
    {
      "type": "USER",
      "name": "testu...</msg>
<status status="PASS" endtime="20191016 11:09:37.091" starttime="20191016 11:09:34.234"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 11:09:37.093" level="INFO">{
  "metadata": {},
  "name": "19808-rpcwoport",
  "admin": "root",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": 1571224174128,
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" endtime="20191016 11:09:37.093" starttime="20191016 11:09:37.091"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 11:09:37.094" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 11:09:37.094" starttime="20191016 11:09:37.093"></status>
</kw>
<msg timestamp="20191016 11:09:37.095" level="INFO">${result} = {
  "metadata": {},
  "name": "19808-rpcwoport",
  "admin": "root",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": 1571224174128,
  "acls": [
    {
      "type": "USER",
      "name": "testu...</msg>
<status status="PASS" endtime="20191016 11:09:37.095" starttime="20191016 11:09:34.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20191016 11:09:37.096" starttime="20191016 11:09:37.095"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | grep -Ev 'Removed|DEBUG|ERROR|INFO|TRACE|WARN' | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 11:09:37.100" level="INFO">Running command 'ozone sh volume list | grep -Ev 'Removed|DEBUG|ERROR|INFO|TRACE|WARN' | jq -r '. | select(.name=="19808-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 11:09:39.986" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 11:09:39.986" level="INFO">${output} = {
  "metadata": {},
  "name": "19808-rpcwoport",
  "admin": "root",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": 1571224174128,
  "acls": [
    {
      "type": "USER",
      "name": "testu...</msg>
<status status="PASS" endtime="20191016 11:09:39.986" starttime="20191016 11:09:37.098"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 11:09:39.988" level="INFO">{
  "metadata": {},
  "name": "19808-rpcwoport",
  "admin": "root",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": 1571224174128,
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" endtime="20191016 11:09:39.988" starttime="20191016 11:09:39.987"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 11:09:39.990" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 11:09:39.991" starttime="20191016 11:09:39.989"></status>
</kw>
<msg timestamp="20191016 11:09:39.991" level="INFO">${result} = {
  "metadata": {},
  "name": "19808-rpcwoport",
  "admin": "root",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": 1571224174128,
  "acls": [
    {
      "type": "USER",
      "name": "testu...</msg>
<status status="PASS" endtime="20191016 11:09:39.991" starttime="20191016 11:09:37.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20191016 11:09:39.992" starttime="20191016 11:09:39.992"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 11:09:39.996" level="INFO">Running command 'ozone sh volume update o3://om:9862/19808-rpcwoport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 11:09:42.927" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 11:09:42.928" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191016 11:09:42.928" starttime="20191016 11:09:39.994"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 11:09:42.930" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "name" : "19808-rpcwoport",
  "admin" : "root",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "creationTime" : 1571224174128,
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" endtime="20191016 11:09:42.930" starttime="20191016 11:09:42.929"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 11:09:42.931" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 11:09:42.932" starttime="20191016 11:09:42.931"></status>
</kw>
<status status="PASS" endtime="20191016 11:09:42.932" starttime="20191016 11:09:39.993"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | grep -Ev 'Removed|WARN|DEBUG|ERROR|INFO|TRACE' | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 11:09:42.937" level="INFO">Running command 'ozone sh volume info o3://om:9862/19808-rpcwoport | grep -Ev 'Removed|WARN|DEBUG|ERROR|INFO|TRACE' | jq -r '. | select(.name=="19808-rpcwoport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 11:09:45.975" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 11:09:45.975" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20191016 11:09:45.976" starttime="20191016 11:09:42.934"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 11:09:45.978" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20191016 11:09:45.978" starttime="20191016 11:09:45.976"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 11:09:45.979" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 11:09:45.979" starttime="20191016 11:09:45.978"></status>
</kw>
<msg timestamp="20191016 11:09:45.980" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20191016 11:09:45.980" starttime="20191016 11:09:42.933"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20191016 11:09:45.982" starttime="20191016 11:09:45.981"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 11:09:45.986" level="INFO">Running command 'ozone sh bucket create o3://om:9862/19808-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 11:09:48.853" level="INFO">${rc} = 255</msg>
<msg timestamp="20191016 11:09:48.853" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191016 11:09:48.853" starttime="20191016 11:09:45.983"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 11:09:48.855" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_NOT_FOUND Bucket bb1 is not found</msg>
<status status="PASS" endtime="20191016 11:09:48.856" starttime="20191016 11:09:48.854"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 11:09:48.857" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191016 11:09:48.858" level="FAIL">255 != 0</msg>
<status status="FAIL" endtime="20191016 11:09:48.858" starttime="20191016 11:09:48.856"></status>
</kw>
<status status="FAIL" endtime="20191016 11:09:48.858" starttime="20191016 11:09:45.982"></status>
</kw>
<status status="FAIL" endtime="20191016 11:09:48.859" starttime="20191016 11:09:31.493"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="FAIL" endtime="20191016 11:09:48.859" critical="yes" starttime="20191016 11:09:31.443">255 != 0</status>
</test>
<test id="s1-s2-t2" name="RpcClient volume acls">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 11:09:48.867" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 11:09:48.875" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 11:09:48.875" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20191016 11:09:48.875" starttime="20191016 11:09:48.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 11:09:48.877" level="INFO">scm</msg>
<status status="PASS" endtime="20191016 11:09:48.877" starttime="20191016 11:09:48.876"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 11:09:48.878" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 11:09:48.879" starttime="20191016 11:09:48.878"></status>
</kw>
<msg timestamp="20191016 11:09:48.879" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20191016 11:09:48.879" starttime="20191016 11:09:48.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20191016 11:09:48.881" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20191016 11:09:48.881" starttime="20191016 11:09:48.880"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 11:09:48.887" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 11:09:48.930" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 11:09:48.930" level="INFO">${output} = </msg>
<status status="PASS" endtime="20191016 11:09:48.930" starttime="20191016 11:09:48.884"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 11:09:48.932" level="INFO"></msg>
<status status="PASS" endtime="20191016 11:09:48.932" starttime="20191016 11:09:48.931"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 11:09:48.933" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 11:09:48.933" starttime="20191016 11:09:48.932"></status>
</kw>
<status status="PASS" endtime="20191016 11:09:48.934" starttime="20191016 11:09:48.882"></status>
</kw>
<status status="PASS" endtime="20191016 11:09:48.934" starttime="20191016 11:09:48.881"></status>
</kw>
<status status="PASS" endtime="20191016 11:09:48.934" starttime="20191016 11:09:48.863"></status>
</kw>
<status status="PASS" endtime="20191016 11:09:48.935" starttime="20191016 11:09:48.862"></status>
</kw>
<kw name="Test Volume Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 11:09:48.940" level="INFO">Running command 'ozone sh volume create o3://om:9862/19808-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 11:09:51.715" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 11:09:51.715" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191016 11:09:51.715" starttime="20191016 11:09:48.938"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 11:09:51.717" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20191016 11:09:51.718" starttime="20191016 11:09:51.716"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 11:09:51.719" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 11:09:51.719" starttime="20191016 11:09:51.718"></status>
</kw>
<status status="PASS" endtime="20191016 11:09:51.720" starttime="20191016 11:09:48.936"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 11:09:51.724" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/19808-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 11:09:54.494" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 11:09:54.494" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191016 11:09:54.494" starttime="20191016 11:09:51.721"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 11:09:54.496" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20191016 11:09:54.497" starttime="20191016 11:09:54.495"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 11:09:54.497" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 11:09:54.498" starttime="20191016 11:09:54.497"></status>
</kw>
<msg timestamp="20191016 11:09:54.498" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191016 11:09:54.498" starttime="20191016 11:09:51.720"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" endtime="20191016 11:09:54.501" starttime="20191016 11:09:54.499"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 11:09:54.504" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/19808-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 11:09:57.382" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 11:09:57.382" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191016 11:09:57.382" starttime="20191016 11:09:54.502"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 11:09:57.384" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
Acl added successfully: true</msg>
<status status="PASS" endtime="20191016 11:09:57.384" starttime="20191016 11:09:57.383"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 11:09:57.385" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 11:09:57.385" starttime="20191016 11:09:57.385"></status>
</kw>
<msg timestamp="20191016 11:09:57.386" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191016 11:09:57.386" starttime="20191016 11:09:54.501"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 11:09:57.389" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/19808-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 11:10:00.343" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 11:10:00.343" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191016 11:10:00.343" starttime="20191016 11:09:57.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 11:10:00.345" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20191016 11:10:00.345" starttime="20191016 11:10:00.344"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 11:10:00.346" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 11:10:00.346" starttime="20191016 11:10:00.345"></status>
</kw>
<msg timestamp="20191016 11:10:00.346" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191016 11:10:00.346" starttime="20191016 11:09:57.386"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" endtime="20191016 11:10:00.348" starttime="20191016 11:10:00.346"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 11:10:00.351" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/19808-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 11:10:03.238" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 11:10:03.238" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191016 11:10:03.238" starttime="20191016 11:10:00.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 11:10:03.240" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
Acl removed successfully: false</msg>
<status status="PASS" endtime="20191016 11:10:03.240" starttime="20191016 11:10:03.239"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 11:10:03.241" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 11:10:03.241" starttime="20191016 11:10:03.241"></status>
</kw>
<msg timestamp="20191016 11:10:03.242" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191016 11:10:03.242" starttime="20191016 11:10:00.348"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 11:10:03.246" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/19808-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 11:10:06.094" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 11:10:06.094" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191016 11:10:06.094" starttime="20191016 11:10:03.244"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 11:10:06.096" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20191016 11:10:06.097" starttime="20191016 11:10:06.095"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 11:10:06.098" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 11:10:06.098" starttime="20191016 11:10:06.097"></status>
</kw>
<msg timestamp="20191016 11:10:06.099" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191016 11:10:06.099" starttime="20191016 11:10:03.243"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" endtime="20191016 11:10:06.102" starttime="20191016 11:10:06.099"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 11:10:06.107" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/19808-rpcwoport2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 11:10:08.873" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 11:10:08.873" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191016 11:10:08.874" starttime="20191016 11:10:06.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 11:10:08.876" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
 acls103 user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]Acl set successfully: true</msg>
<status status="PASS" endtime="20191016 11:10:08.876" starttime="20191016 11:10:08.874"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 11:10:08.877" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 11:10:08.878" starttime="20191016 11:10:08.876"></status>
</kw>
<msg timestamp="20191016 11:10:08.878" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191016 11:10:08.878" starttime="20191016 11:10:06.102"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 11:10:08.883" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/19808-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 11:10:11.856" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 11:10:11.856" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191016 11:10:11.856" starttime="20191016 11:10:08.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 11:10:11.858" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20191016 11:10:11.858" starttime="20191016 11:10:11.857"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 11:10:11.859" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 11:10:11.859" starttime="20191016 11:10:11.858"></status>
</kw>
<msg timestamp="20191016 11:10:11.860" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191016 11:10:11.860" starttime="20191016 11:10:08.879"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" endtime="20191016 11:10:11.861" starttime="20191016 11:10:11.860"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" endtime="20191016 11:10:11.863" starttime="20191016 11:10:11.861"></status>
</kw>
<status status="PASS" endtime="20191016 11:10:11.863" starttime="20191016 11:09:48.935"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20191016 11:10:11.864" critical="yes" starttime="20191016 11:09:48.860"></status>
</test>
<test id="s1-s2-t3" name="RpcClient bucket acls">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 11:10:11.869" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 11:10:11.877" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 11:10:11.877" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20191016 11:10:11.877" starttime="20191016 11:10:11.868"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 11:10:11.880" level="INFO">scm</msg>
<status status="PASS" endtime="20191016 11:10:11.880" starttime="20191016 11:10:11.878"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 11:10:11.881" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 11:10:11.881" starttime="20191016 11:10:11.880"></status>
</kw>
<msg timestamp="20191016 11:10:11.882" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20191016 11:10:11.882" starttime="20191016 11:10:11.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20191016 11:10:11.884" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20191016 11:10:11.884" starttime="20191016 11:10:11.883"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 11:10:11.890" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 11:10:11.916" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 11:10:11.917" level="INFO">${output} = </msg>
<status status="PASS" endtime="20191016 11:10:11.917" starttime="20191016 11:10:11.888"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 11:10:11.918" level="INFO"></msg>
<status status="PASS" endtime="20191016 11:10:11.919" starttime="20191016 11:10:11.917"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 11:10:11.920" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 11:10:11.920" starttime="20191016 11:10:11.919"></status>
</kw>
<status status="PASS" endtime="20191016 11:10:11.920" starttime="20191016 11:10:11.886"></status>
</kw>
<status status="PASS" endtime="20191016 11:10:11.921" starttime="20191016 11:10:11.884"></status>
</kw>
<status status="PASS" endtime="20191016 11:10:11.921" starttime="20191016 11:10:11.866"></status>
</kw>
<status status="PASS" endtime="20191016 11:10:11.921" starttime="20191016 11:10:11.865"></status>
</kw>
<kw name="Test Bucket Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 11:10:11.926" level="INFO">Running command 'ozone sh bucket create o3://om:9862/19808-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 11:10:14.667" level="INFO">${rc} = 255</msg>
<msg timestamp="20191016 11:10:14.667" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191016 11:10:14.667" starttime="20191016 11:10:11.923"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 11:10:14.670" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_NOT_FOUND Bucket bb1 is not found</msg>
<status status="PASS" endtime="20191016 11:10:14.670" starttime="20191016 11:10:14.668"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 11:10:14.671" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191016 11:10:14.672" level="FAIL">255 != 0</msg>
<status status="FAIL" endtime="20191016 11:10:14.672" starttime="20191016 11:10:14.670"></status>
</kw>
<status status="FAIL" endtime="20191016 11:10:14.673" starttime="20191016 11:10:11.922"></status>
</kw>
<status status="FAIL" endtime="20191016 11:10:14.673" starttime="20191016 11:10:11.921"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="FAIL" endtime="20191016 11:10:14.674" critical="yes" starttime="20191016 11:10:11.864">255 != 0</status>
</test>
<test id="s1-s2-t4" name="RpcClient key acls">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 11:10:14.682" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 11:10:14.689" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 11:10:14.689" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20191016 11:10:14.690" starttime="20191016 11:10:14.679"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 11:10:14.692" level="INFO">scm</msg>
<status status="PASS" endtime="20191016 11:10:14.692" starttime="20191016 11:10:14.690"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 11:10:14.693" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 11:10:14.693" starttime="20191016 11:10:14.692"></status>
</kw>
<msg timestamp="20191016 11:10:14.694" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20191016 11:10:14.694" starttime="20191016 11:10:14.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20191016 11:10:14.696" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20191016 11:10:14.696" starttime="20191016 11:10:14.695"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 11:10:14.701" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 11:10:14.731" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 11:10:14.731" level="INFO">${output} = </msg>
<status status="PASS" endtime="20191016 11:10:14.731" starttime="20191016 11:10:14.699"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 11:10:14.733" level="INFO"></msg>
<status status="PASS" endtime="20191016 11:10:14.733" starttime="20191016 11:10:14.732"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 11:10:14.734" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 11:10:14.734" starttime="20191016 11:10:14.733"></status>
</kw>
<status status="PASS" endtime="20191016 11:10:14.735" starttime="20191016 11:10:14.697"></status>
</kw>
<status status="PASS" endtime="20191016 11:10:14.735" starttime="20191016 11:10:14.696"></status>
</kw>
<status status="PASS" endtime="20191016 11:10:14.735" starttime="20191016 11:10:14.677"></status>
</kw>
<status status="PASS" endtime="20191016 11:10:14.735" starttime="20191016 11:10:14.676"></status>
</kw>
<kw name="Test key Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 11:10:14.740" level="INFO">Running command 'ozone sh key put o3://om:9862/19808-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 11:10:17.661" level="INFO">${rc} = 255</msg>
<msg timestamp="20191016 11:10:17.661" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191016 11:10:17.662" starttime="20191016 11:10:14.738"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 11:10:17.664" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_NOT_FOUND Bucket bb1 is not found</msg>
<status status="PASS" endtime="20191016 11:10:17.664" starttime="20191016 11:10:17.663"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 11:10:17.665" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191016 11:10:17.666" level="FAIL">255 != 0</msg>
<status status="FAIL" endtime="20191016 11:10:17.666" starttime="20191016 11:10:17.664"></status>
</kw>
<status status="FAIL" endtime="20191016 11:10:17.667" starttime="20191016 11:10:14.737"></status>
</kw>
<status status="FAIL" endtime="20191016 11:10:17.667" starttime="20191016 11:10:14.736"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="FAIL" endtime="20191016 11:10:17.668" critical="yes" starttime="20191016 11:10:14.675">255 != 0</status>
</test>
<test id="s1-s2-t5" name="RpcClient without host">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 11:10:17.676" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 11:10:17.684" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 11:10:17.684" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20191016 11:10:17.684" starttime="20191016 11:10:17.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 11:10:17.686" level="INFO">scm</msg>
<status status="PASS" endtime="20191016 11:10:17.687" starttime="20191016 11:10:17.685"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 11:10:17.688" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 11:10:17.688" starttime="20191016 11:10:17.687"></status>
</kw>
<msg timestamp="20191016 11:10:17.689" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20191016 11:10:17.689" starttime="20191016 11:10:17.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20191016 11:10:17.690" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20191016 11:10:17.690" starttime="20191016 11:10:17.689"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 11:10:17.695" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 11:10:17.711" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 11:10:17.712" level="INFO">${output} = </msg>
<status status="PASS" endtime="20191016 11:10:17.712" starttime="20191016 11:10:17.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 11:10:17.713" level="INFO"></msg>
<status status="PASS" endtime="20191016 11:10:17.713" starttime="20191016 11:10:17.712"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 11:10:17.714" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 11:10:17.715" starttime="20191016 11:10:17.714"></status>
</kw>
<status status="PASS" endtime="20191016 11:10:17.715" starttime="20191016 11:10:17.692"></status>
</kw>
<status status="PASS" endtime="20191016 11:10:17.715" starttime="20191016 11:10:17.691"></status>
</kw>
<status status="PASS" endtime="20191016 11:10:17.716" starttime="20191016 11:10:17.671"></status>
</kw>
<status status="PASS" endtime="20191016 11:10:17.716" starttime="20191016 11:10:17.670"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 11:10:17.721" level="INFO">Running command 'ozone sh volume create o3:///19808-rpcwport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 11:10:20.419" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 11:10:20.420" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191016 11:10:20.420" starttime="20191016 11:10:17.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 11:10:20.421" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20191016 11:10:20.421" starttime="20191016 11:10:20.420"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 11:10:20.422" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 11:10:20.422" starttime="20191016 11:10:20.421"></status>
</kw>
<msg timestamp="20191016 11:10:20.422" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191016 11:10:20.422" starttime="20191016 11:10:17.717"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20191016 11:10:20.423" starttime="20191016 11:10:20.423"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | grep -Ev 'Removed|WARN|DEBUG|ERROR|INFO|TRACE' | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 11:10:20.426" level="INFO">Running command 'ozone sh volume list o3:/// | grep -Ev 'Removed|WARN|DEBUG|ERROR|INFO|TRACE' | jq -r '. | select(.name=="19808-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 11:10:23.276" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 11:10:23.276" level="INFO">${output} = {
  "metadata": {},
  "name": "19808-rpcwport",
  "admin": "root",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": 1571224220317,
  "acls": [
    {
      "type": "USER",
      "name": "testus...</msg>
<status status="PASS" endtime="20191016 11:10:23.276" starttime="20191016 11:10:20.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 11:10:23.278" level="INFO">{
  "metadata": {},
  "name": "19808-rpcwport",
  "admin": "root",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": 1571224220317,
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" endtime="20191016 11:10:23.278" starttime="20191016 11:10:23.277"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 11:10:23.280" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 11:10:23.280" starttime="20191016 11:10:23.279"></status>
</kw>
<msg timestamp="20191016 11:10:23.280" level="INFO">${result} = {
  "metadata": {},
  "name": "19808-rpcwport",
  "admin": "root",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": 1571224220317,
  "acls": [
    {
      "type": "USER",
      "name": "testus...</msg>
<status status="PASS" endtime="20191016 11:10:23.281" starttime="20191016 11:10:20.423"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20191016 11:10:23.282" starttime="20191016 11:10:23.281"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | grep -Ev 'Removed|DEBUG|ERROR|INFO|TRACE|WARN' | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 11:10:23.285" level="INFO">Running command 'ozone sh volume list | grep -Ev 'Removed|DEBUG|ERROR|INFO|TRACE|WARN' | jq -r '. | select(.name=="19808-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 11:10:26.193" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 11:10:26.193" level="INFO">${output} = {
  "metadata": {},
  "name": "19808-rpcwport",
  "admin": "root",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": 1571224220317,
  "acls": [
    {
      "type": "USER",
      "name": "testus...</msg>
<status status="PASS" endtime="20191016 11:10:26.194" starttime="20191016 11:10:23.283"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 11:10:26.196" level="INFO">{
  "metadata": {},
  "name": "19808-rpcwport",
  "admin": "root",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": 1571224220317,
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" endtime="20191016 11:10:26.196" starttime="20191016 11:10:26.194"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 11:10:26.197" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 11:10:26.198" starttime="20191016 11:10:26.196"></status>
</kw>
<msg timestamp="20191016 11:10:26.198" level="INFO">${result} = {
  "metadata": {},
  "name": "19808-rpcwport",
  "admin": "root",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": 1571224220317,
  "acls": [
    {
      "type": "USER",
      "name": "testus...</msg>
<status status="PASS" endtime="20191016 11:10:26.198" starttime="20191016 11:10:23.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20191016 11:10:26.200" starttime="20191016 11:10:26.199"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 11:10:26.205" level="INFO">Running command 'ozone sh volume update o3:///19808-rpcwport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 11:10:29.146" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 11:10:29.147" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191016 11:10:29.147" starttime="20191016 11:10:26.202"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 11:10:29.149" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "name" : "19808-rpcwport",
  "admin" : "root",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "creationTime" : 1571224220317,
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" endtime="20191016 11:10:29.149" starttime="20191016 11:10:29.148"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 11:10:29.150" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 11:10:29.151" starttime="20191016 11:10:29.150"></status>
</kw>
<status status="PASS" endtime="20191016 11:10:29.151" starttime="20191016 11:10:26.200"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | grep -Ev 'Removed|WARN|DEBUG|ERROR|INFO|TRACE' | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 11:10:29.155" level="INFO">Running command 'ozone sh volume info o3:///19808-rpcwport | grep -Ev 'Removed|WARN|DEBUG|ERROR|INFO|TRACE' | jq -r '. | select(.name=="19808-rpcwport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 11:10:32.108" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 11:10:32.108" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20191016 11:10:32.109" starttime="20191016 11:10:29.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 11:10:32.111" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20191016 11:10:32.111" starttime="20191016 11:10:32.109"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 11:10:32.112" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 11:10:32.112" starttime="20191016 11:10:32.111"></status>
</kw>
<msg timestamp="20191016 11:10:32.113" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20191016 11:10:32.113" starttime="20191016 11:10:29.151"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20191016 11:10:32.114" starttime="20191016 11:10:32.114"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 11:10:32.119" level="INFO">Running command 'ozone sh bucket create o3:///19808-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 11:10:34.897" level="INFO">${rc} = 255</msg>
<msg timestamp="20191016 11:10:34.897" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191016 11:10:34.897" starttime="20191016 11:10:32.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 11:10:34.899" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_NOT_FOUND Bucket bb1 is not found</msg>
<status status="PASS" endtime="20191016 11:10:34.899" starttime="20191016 11:10:34.898"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 11:10:34.900" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191016 11:10:34.901" level="FAIL">255 != 0</msg>
<status status="FAIL" endtime="20191016 11:10:34.901" starttime="20191016 11:10:34.900"></status>
</kw>
<status status="FAIL" endtime="20191016 11:10:34.902" starttime="20191016 11:10:32.115"></status>
</kw>
<status status="FAIL" endtime="20191016 11:10:34.902" starttime="20191016 11:10:17.716"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="FAIL" endtime="20191016 11:10:34.903" critical="yes" starttime="20191016 11:10:17.669">255 != 0</status>
</test>
<test id="s1-s2-t6" name="RpcClient without scheme">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 11:10:34.910" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 11:10:34.917" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 11:10:34.917" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20191016 11:10:34.918" starttime="20191016 11:10:34.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 11:10:34.920" level="INFO">scm</msg>
<status status="PASS" endtime="20191016 11:10:34.920" starttime="20191016 11:10:34.918"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 11:10:34.921" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 11:10:34.922" starttime="20191016 11:10:34.920"></status>
</kw>
<msg timestamp="20191016 11:10:34.922" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20191016 11:10:34.922" starttime="20191016 11:10:34.907"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20191016 11:10:34.924" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20191016 11:10:34.924" starttime="20191016 11:10:34.923"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 11:10:34.929" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 11:10:34.947" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 11:10:34.947" level="INFO">${output} = </msg>
<status status="PASS" endtime="20191016 11:10:34.947" starttime="20191016 11:10:34.927"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 11:10:34.949" level="INFO"></msg>
<status status="PASS" endtime="20191016 11:10:34.949" starttime="20191016 11:10:34.948"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 11:10:34.950" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 11:10:34.950" starttime="20191016 11:10:34.949"></status>
</kw>
<status status="PASS" endtime="20191016 11:10:34.951" starttime="20191016 11:10:34.926"></status>
</kw>
<status status="PASS" endtime="20191016 11:10:34.951" starttime="20191016 11:10:34.924"></status>
</kw>
<status status="PASS" endtime="20191016 11:10:34.951" starttime="20191016 11:10:34.906"></status>
</kw>
<status status="PASS" endtime="20191016 11:10:34.951" starttime="20191016 11:10:34.905"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 11:10:34.958" level="INFO">Running command 'ozone sh volume create /19808-rpcwoscheme --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 11:10:37.773" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 11:10:37.773" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191016 11:10:37.773" starttime="20191016 11:10:34.954"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 11:10:37.774" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20191016 11:10:37.775" starttime="20191016 11:10:37.773"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 11:10:37.775" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 11:10:37.776" starttime="20191016 11:10:37.775"></status>
</kw>
<msg timestamp="20191016 11:10:37.776" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191016 11:10:37.776" starttime="20191016 11:10:34.953"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20191016 11:10:37.777" starttime="20191016 11:10:37.776"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | grep -Ev 'Removed|WARN|DEBUG|ERROR|INFO|TRACE' | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 11:10:37.780" level="INFO">Running command 'ozone sh volume list / | grep -Ev 'Removed|WARN|DEBUG|ERROR|INFO|TRACE' | jq -r '. | select(.name=="19808-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 11:10:40.637" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 11:10:40.637" level="INFO">${output} = {
  "metadata": {},
  "name": "19808-rpcwoscheme",
  "admin": "root",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": 1571224237664,
  "acls": [
    {
      "type": "USER",
      "name": "tes...</msg>
<status status="PASS" endtime="20191016 11:10:40.638" starttime="20191016 11:10:37.778"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 11:10:40.640" level="INFO">{
  "metadata": {},
  "name": "19808-rpcwoscheme",
  "admin": "root",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": 1571224237664,
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" endtime="20191016 11:10:40.640" starttime="20191016 11:10:40.638"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 11:10:40.641" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 11:10:40.641" starttime="20191016 11:10:40.640"></status>
</kw>
<msg timestamp="20191016 11:10:40.642" level="INFO">${result} = {
  "metadata": {},
  "name": "19808-rpcwoscheme",
  "admin": "root",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": 1571224237664,
  "acls": [
    {
      "type": "USER",
      "name": "tes...</msg>
<status status="PASS" endtime="20191016 11:10:40.642" starttime="20191016 11:10:37.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20191016 11:10:40.643" starttime="20191016 11:10:40.642"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | grep -Ev 'Removed|DEBUG|ERROR|INFO|TRACE|WARN' | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 11:10:40.647" level="INFO">Running command 'ozone sh volume list | grep -Ev 'Removed|DEBUG|ERROR|INFO|TRACE|WARN' | jq -r '. | select(.name=="19808-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 11:10:43.568" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 11:10:43.568" level="INFO">${output} = {
  "metadata": {},
  "name": "19808-rpcwoscheme",
  "admin": "root",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": 1571224237664,
  "acls": [
    {
      "type": "USER",
      "name": "tes...</msg>
<status status="PASS" endtime="20191016 11:10:43.568" starttime="20191016 11:10:40.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 11:10:43.570" level="INFO">{
  "metadata": {},
  "name": "19808-rpcwoscheme",
  "admin": "root",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": 1571224237664,
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" endtime="20191016 11:10:43.570" starttime="20191016 11:10:43.569"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 11:10:43.571" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 11:10:43.571" starttime="20191016 11:10:43.571"></status>
</kw>
<msg timestamp="20191016 11:10:43.572" level="INFO">${result} = {
  "metadata": {},
  "name": "19808-rpcwoscheme",
  "admin": "root",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": 1571224237664,
  "acls": [
    {
      "type": "USER",
      "name": "tes...</msg>
<status status="PASS" endtime="20191016 11:10:43.572" starttime="20191016 11:10:40.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20191016 11:10:43.573" starttime="20191016 11:10:43.572"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 11:10:43.576" level="INFO">Running command 'ozone sh volume update /19808-rpcwoscheme --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 11:10:46.233" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 11:10:46.233" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191016 11:10:46.233" starttime="20191016 11:10:43.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 11:10:46.235" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "name" : "19808-rpcwoscheme",
  "admin" : "root",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "creationTime" : 1571224237664,
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" endtime="20191016 11:10:46.235" starttime="20191016 11:10:46.234"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 11:10:46.236" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 11:10:46.236" starttime="20191016 11:10:46.235"></status>
</kw>
<status status="PASS" endtime="20191016 11:10:46.236" starttime="20191016 11:10:43.573"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | grep -Ev 'Removed|WARN|DEBUG|ERROR|INFO|TRACE' | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 11:10:46.240" level="INFO">Running command 'ozone sh volume info /19808-rpcwoscheme | grep -Ev 'Removed|WARN|DEBUG|ERROR|INFO|TRACE' | jq -r '. | select(.name=="19808-rpcwoscheme") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 11:10:49.138" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 11:10:49.139" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20191016 11:10:49.139" starttime="20191016 11:10:46.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 11:10:49.141" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20191016 11:10:49.141" starttime="20191016 11:10:49.140"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 11:10:49.142" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 11:10:49.143" starttime="20191016 11:10:49.142"></status>
</kw>
<msg timestamp="20191016 11:10:49.143" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20191016 11:10:49.144" starttime="20191016 11:10:46.236"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20191016 11:10:49.145" starttime="20191016 11:10:49.144"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 11:10:49.149" level="INFO">Running command 'ozone sh bucket create /19808-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 11:10:51.953" level="INFO">${rc} = 255</msg>
<msg timestamp="20191016 11:10:51.954" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191016 11:10:51.954" starttime="20191016 11:10:49.147"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 11:10:51.955" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_NOT_FOUND Bucket bb1 is not found</msg>
<status status="PASS" endtime="20191016 11:10:51.955" starttime="20191016 11:10:51.954"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 11:10:51.956" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191016 11:10:51.958" level="FAIL">255 != 0</msg>
<status status="FAIL" endtime="20191016 11:10:51.958" starttime="20191016 11:10:51.955"></status>
</kw>
<status status="FAIL" endtime="20191016 11:10:51.958" starttime="20191016 11:10:49.145"></status>
</kw>
<status status="FAIL" endtime="20191016 11:10:51.958" starttime="20191016 11:10:34.952"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="FAIL" endtime="20191016 11:10:51.958" critical="yes" starttime="20191016 11:10:34.903">255 != 0</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" endtime="20191016 11:10:51.960" starttime="20191016 11:09:31.428"></status>
</suite>
<status status="FAIL" endtime="20191016 11:10:51.965" starttime="20191016 11:09:22.590"></status>
</suite>
<statistics>
<total>
<stat fail="6" pass="2">Critical Tests</stat>
<stat fail="6" pass="2">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="6" id="s1" name="ozonesecure-basic" pass="2">ozonesecure-basic</stat>
<stat fail="1" id="s1-s1" name="Basic" pass="1">ozonesecure-basic.Basic</stat>
<stat fail="5" id="s1-s2" name="Ozone-Shell" pass="1">ozonesecure-basic.Ozone-Shell</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
