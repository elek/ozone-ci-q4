<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20191016 05:39:09.733" generator="Robot 3.1.2 (Python 2.7.5 on linux2)">
<suite source="/opt/hadoop/smoketest/basic" id="s1" name="ozonesecure-basic">
<suite source="/opt/hadoop/smoketest/basic/basic.robot" id="s1-s1" name="Basic">
<test id="s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 05:39:09.794" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 05:39:09.799" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 05:39:09.800" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20191016 05:39:09.800" starttime="20191016 05:39:09.793"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 05:39:09.801" level="INFO">scm</msg>
<status status="PASS" endtime="20191016 05:39:09.801" starttime="20191016 05:39:09.800"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 05:39:09.802" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 05:39:09.802" starttime="20191016 05:39:09.801"></status>
</kw>
<msg timestamp="20191016 05:39:09.802" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20191016 05:39:09.802" starttime="20191016 05:39:09.792"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 05:39:09.806" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 05:39:09.821" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 05:39:09.821" level="INFO">${output} = </msg>
<status status="PASS" endtime="20191016 05:39:09.821" starttime="20191016 05:39:09.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 05:39:09.822" level="INFO"></msg>
<status status="PASS" endtime="20191016 05:39:09.823" starttime="20191016 05:39:09.822"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 05:39:09.823" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 05:39:09.823" starttime="20191016 05:39:09.823"></status>
</kw>
<status status="PASS" endtime="20191016 05:39:09.824" starttime="20191016 05:39:09.803"></status>
</kw>
<status status="PASS" endtime="20191016 05:39:09.824" starttime="20191016 05:39:09.803"></status>
</kw>
<status status="PASS" endtime="20191016 05:39:09.824" starttime="20191016 05:39:09.792"></status>
</kw>
<status status="PASS" endtime="20191016 05:39:09.824" starttime="20191016 05:39:09.791"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 05:39:09.826" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 05:39:09.868" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 05:39:09.868" level="INFO">${output} = HTTP/1.1 401 Authentication required
Date: Wed, 16 Oct 2019 05:39:09 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Coo...</msg>
<status status="PASS" endtime="20191016 05:39:09.868" starttime="20191016 05:39:09.825"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 05:39:09.869" level="INFO">HTTP/1.1 401 Authentication required
Date: Wed, 16 Oct 2019 05:39:09 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 293

HTTP/1.1 200 OK
Date: Wed, 16 Oct 2019 05:39:09 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCWbFSDDlkpQ8GvcK6xT/bUpaRFCectId2P/w+wst8+B8UpaBp2SQg1H8kU1ZXkeCgCpFAHntv0ustQKwvFHCuwa2r
Set-Cookie: hadoop.auth="u=root&amp;p=HTTP/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1571240349859&amp;s=f7pcegKIvI8lRzIupfceOhlLQw8DvmqKC/a4wpOXgJE="; Path=/; HttpOnly
Last-Modified: Wed, 16 Oct 2019 05:09:50 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" endtime="20191016 05:39:09.869" starttime="20191016 05:39:09.868"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 05:39:09.870" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 05:39:09.870" starttime="20191016 05:39:09.869"></status>
</kw>
<msg timestamp="20191016 05:39:09.870" level="INFO">${result} = HTTP/1.1 401 Authentication required
Date: Wed, 16 Oct 2019 05:39:09 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Coo...</msg>
<status status="PASS" endtime="20191016 05:39:09.870" starttime="20191016 05:39:09.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20191016 05:39:09.871" starttime="20191016 05:39:09.871"></status>
</kw>
<status status="PASS" endtime="20191016 05:39:09.871" critical="yes" starttime="20191016 05:39:09.790"></status>
</test>
<test id="s1-s1-t2" name="Start freon testing">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 05:39:09.876" level="INFO">Running command 'ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 05:39:18.453" level="INFO">${rc} = 255</msg>
<msg timestamp="20191016 05:39:18.453" level="INFO">${output} = 2019-10-16 05:39:10,837 INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2019-10-16 05:39:11,054 INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s)...</msg>
<status status="PASS" endtime="20191016 05:39:18.453" starttime="20191016 05:39:09.874"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 05:39:18.455" level="INFO">2019-10-16 05:39:10,837 INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2019-10-16 05:39:11,054 INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2019-10-16 05:39:11,055 INFO impl.MetricsSystemImpl: ozone-freon metrics system started
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
2019-10-16 05:39:13,364 [main] INFO       - Number of Threads: 1
2019-10-16 05:39:13,365 [main] INFO       - Number of Volumes: 5.
2019-10-16 05:39:13,366 [main] INFO       - Number of Buckets per Volume: 5.
2019-10-16 05:39:13,366 [main] INFO       - Number of Keys per Bucket: 5.
2019-10-16 05:39:13,366 [main] INFO       - Key size: 10240 bytes
2019-10-16 05:39:13,366 [main] INFO       - Buffer size: 4096 bytes
2019-10-16 05:39:13,366 [main] INFO       - validateWrites : false
2019-10-16 05:39:13,373 [main] INFO       - Starting progress bar Thread.

 0.00% |?                                                                                                    |  0/125 Time: 0:00:002019-10-16 05:39:13,407 [pool-2-thread-1] INFO       - Creating Volume: vol-0-53938, with HTTP/scm@EXAMPLE.COM as owner.
2019-10-16 05:39:13,520 [pool-2-thread-1] INFO       - Creating Volume: vol-1-95232, with HTTP/scm@EXAMPLE.COM as owner.
2019-10-16 05:39:13,534 [pool-2-thread-1] INFO       - Creating Volume: vol-2-88122, with HTTP/scm@EXAMPLE.COM as owner.
2019-10-16 05:39:13,547 [pool-2-thread-1] INFO       - Creating Volume: vol-3-66788, with HTTP/scm@EXAMPLE.COM as owner.
2019-10-16 05:39:13,560 [pool-2-thread-1] INFO       - Creating Volume: vol-4-53034, with HTTP/scm@EXAMPLE.COM as owner.
2019-10-16 05:39:13,572 [pool-2-thread-1] INFO       - Creating Bucket: vol-0-53938/bucket-0-86435, with Versioning false and Storage Type set to DISK and Encryption set to false 
2019-10-16 05:39:13,605 [pool-2-thread-1] ERROR      - Could not create bucket 
BUCKET_NOT_FOUND org.apache.hadoop.ozone.om.exceptions.OMException: Bucket bucket-0-86435 is not found
	at org.apache.hadoop.ozone.om.protocolPB.OzoneManagerProtocolClientSideTranslatorPB.handleError(OzoneManagerProtocolClientSideTranslatorPB.java:732)
	at org.apache.hadoop.ozone.om.protocolPB.OzoneManagerProtocolClientSideTranslatorPB.createBucket(OzoneManagerProtocolClientSideTranslatorPB.java:577)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.hadoop.hdds.tracing.TraceAllMethod.invoke(TraceAllMethod.java:66)
	at com.sun.proxy.$Proxy21.createBucket(Unknown Source)
	at org.apache.hadoop.ozone.client.rpc.RpcClient.createBucket(RpcClient.java:414)
	at org.apache.hadoop.ozone.client.rpc.RpcClient.createBucket(RpcClient.java:372)
	at org.apache.hadoop.ozone.client.OzoneVolume.createBucket(OzoneVolume.java:209)
	at org.apache.hadoop.ozone.freon.RandomKeyGenerator.createBucket(RandomKeyGenerator.java:660)
	at org.apache.hadoop.ozone.freon.RandomKeyGenerator.access$800(RandomKeyGenerator.java:88)
	at org.apache.hadoop.ozone.freon.RandomKeyGenerator$ObjectCreator.run(RandomKeyGenerator.java:608)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
 0.00% |?                                                                                                    |  0/125 Time: 0:00:01 0.00% |?                                                                                                    |  0/125 Time: 0:00:02 0.00% |?                                                                                                    |  0/125 Time: 0:00:03 0.00% |?                                                                                                    |  0/125 Time: 0:00:04 100.00% |?????????????????????????????????????????????????????????????????????????????????????????????????????|  125/125 Time: 0:00:05
Bucket bucket-0-86435 is not found

***************************************************
Status: Failed
Git Base Revision: e97acb3bd8f3befd27418996fa5d4b50bf2e17bf
Number of Volumes created: 5
Number of Buckets created: 0
Number of Keys added: 0
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,159
Average Time spent in bucket creation: 00:00:00,000
Average Time spent in key creation: 00:00:00,000
Average Time spent in key write: 00:00:00,000
Total bytes written: 0
Total Execution time: 00:00:07,043
***************************************************</msg>
<status status="PASS" endtime="20191016 05:39:18.455" starttime="20191016 05:39:18.454"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 05:39:18.456" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191016 05:39:18.457" level="FAIL">255 != 0</msg>
<status status="FAIL" endtime="20191016 05:39:18.457" starttime="20191016 05:39:18.455"></status>
</kw>
<status status="FAIL" endtime="20191016 05:39:18.457" starttime="20191016 05:39:09.872"></status>
</kw>
<status status="FAIL" endtime="20191016 05:39:18.458" critical="yes" starttime="20191016 05:39:09.872">255 != 0</status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="FAIL" endtime="20191016 05:39:18.459" starttime="20191016 05:39:09.762"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/ozone-shell.robot" id="s1-s2" name="Ozone-Shell">
<kw type="setup" name="Generate prefix">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20191016 05:39:18.470" level="INFO">${random} = 96779</msg>
<status status="PASS" endtime="20191016 05:39:18.470" starttime="20191016 05:39:18.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${prefix}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20191016 05:39:18.471" level="INFO">${prefix} = 96779</msg>
<status status="PASS" endtime="20191016 05:39:18.471" starttime="20191016 05:39:18.471"></status>
</kw>
<status status="PASS" endtime="20191016 05:39:18.472" starttime="20191016 05:39:18.469"></status>
</kw>
<test id="s1-s2-t1" name="RpcClient with port">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 05:39:18.477" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 05:39:18.485" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 05:39:18.485" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20191016 05:39:18.485" starttime="20191016 05:39:18.475"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 05:39:18.487" level="INFO">scm</msg>
<status status="PASS" endtime="20191016 05:39:18.487" starttime="20191016 05:39:18.486"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 05:39:18.488" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 05:39:18.489" starttime="20191016 05:39:18.488"></status>
</kw>
<msg timestamp="20191016 05:39:18.489" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20191016 05:39:18.489" starttime="20191016 05:39:18.474"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20191016 05:39:18.492" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20191016 05:39:18.493" starttime="20191016 05:39:18.490"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 05:39:18.498" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 05:39:18.515" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 05:39:18.515" level="INFO">${output} = </msg>
<status status="PASS" endtime="20191016 05:39:18.515" starttime="20191016 05:39:18.495"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 05:39:18.517" level="INFO"></msg>
<status status="PASS" endtime="20191016 05:39:18.517" starttime="20191016 05:39:18.516"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 05:39:18.518" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 05:39:18.519" starttime="20191016 05:39:18.518"></status>
</kw>
<status status="PASS" endtime="20191016 05:39:18.519" starttime="20191016 05:39:18.494"></status>
</kw>
<status status="PASS" endtime="20191016 05:39:18.520" starttime="20191016 05:39:18.493"></status>
</kw>
<status status="PASS" endtime="20191016 05:39:18.520" starttime="20191016 05:39:18.474"></status>
</kw>
<status status="PASS" endtime="20191016 05:39:18.520" starttime="20191016 05:39:18.473"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 05:39:18.526" level="INFO">Running command 'ozone sh volume create o3://om:9862/96779-rpcwoport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 05:39:21.377" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 05:39:21.377" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191016 05:39:21.377" starttime="20191016 05:39:18.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 05:39:21.379" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20191016 05:39:21.379" starttime="20191016 05:39:21.378"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 05:39:21.380" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 05:39:21.380" starttime="20191016 05:39:21.379"></status>
</kw>
<msg timestamp="20191016 05:39:21.380" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191016 05:39:21.380" starttime="20191016 05:39:18.522"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20191016 05:39:21.381" starttime="20191016 05:39:21.380"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | grep -Ev 'Removed|WARN|DEBUG|ERROR|INFO|TRACE' | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 05:39:21.384" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | grep -Ev 'Removed|WARN|DEBUG|ERROR|INFO|TRACE' | jq -r '. | select(.name=="96779-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 05:39:24.124" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 05:39:24.125" level="INFO">${output} = {
  "metadata": {},
  "name": "96779-rpcwoport",
  "admin": "root",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": 1571204361279,
  "acls": [
    {
      "type": "USER",
      "name": "testu...</msg>
<status status="PASS" endtime="20191016 05:39:24.125" starttime="20191016 05:39:21.382"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 05:39:24.127" level="INFO">{
  "metadata": {},
  "name": "96779-rpcwoport",
  "admin": "root",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": 1571204361279,
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" endtime="20191016 05:39:24.127" starttime="20191016 05:39:24.125"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 05:39:24.129" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 05:39:24.129" starttime="20191016 05:39:24.128"></status>
</kw>
<msg timestamp="20191016 05:39:24.129" level="INFO">${result} = {
  "metadata": {},
  "name": "96779-rpcwoport",
  "admin": "root",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": 1571204361279,
  "acls": [
    {
      "type": "USER",
      "name": "testu...</msg>
<status status="PASS" endtime="20191016 05:39:24.130" starttime="20191016 05:39:21.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20191016 05:39:24.131" starttime="20191016 05:39:24.130"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | grep -Ev 'Removed|DEBUG|ERROR|INFO|TRACE|WARN' | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 05:39:24.135" level="INFO">Running command 'ozone sh volume list | grep -Ev 'Removed|DEBUG|ERROR|INFO|TRACE|WARN' | jq -r '. | select(.name=="96779-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 05:39:27.033" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 05:39:27.033" level="INFO">${output} = {
  "metadata": {},
  "name": "96779-rpcwoport",
  "admin": "root",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": 1571204361279,
  "acls": [
    {
      "type": "USER",
      "name": "testu...</msg>
<status status="PASS" endtime="20191016 05:39:27.033" starttime="20191016 05:39:24.132"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 05:39:27.035" level="INFO">{
  "metadata": {},
  "name": "96779-rpcwoport",
  "admin": "root",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": 1571204361279,
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" endtime="20191016 05:39:27.035" starttime="20191016 05:39:27.034"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 05:39:27.037" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 05:39:27.037" starttime="20191016 05:39:27.035"></status>
</kw>
<msg timestamp="20191016 05:39:27.038" level="INFO">${result} = {
  "metadata": {},
  "name": "96779-rpcwoport",
  "admin": "root",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": 1571204361279,
  "acls": [
    {
      "type": "USER",
      "name": "testu...</msg>
<status status="PASS" endtime="20191016 05:39:27.038" starttime="20191016 05:39:24.131"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20191016 05:39:27.039" starttime="20191016 05:39:27.038"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 05:39:27.042" level="INFO">Running command 'ozone sh volume update o3://om:9862/96779-rpcwoport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 05:39:29.955" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 05:39:29.956" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191016 05:39:29.956" starttime="20191016 05:39:27.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 05:39:29.957" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "name" : "96779-rpcwoport",
  "admin" : "root",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "creationTime" : 1571204361279,
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" endtime="20191016 05:39:29.958" starttime="20191016 05:39:29.956"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 05:39:29.959" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 05:39:29.959" starttime="20191016 05:39:29.958"></status>
</kw>
<status status="PASS" endtime="20191016 05:39:29.959" starttime="20191016 05:39:27.039"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | grep -Ev 'Removed|WARN|DEBUG|ERROR|INFO|TRACE' | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 05:39:29.963" level="INFO">Running command 'ozone sh volume info o3://om:9862/96779-rpcwoport | grep -Ev 'Removed|WARN|DEBUG|ERROR|INFO|TRACE' | jq -r '. | select(.name=="96779-rpcwoport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 05:39:32.762" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 05:39:32.762" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20191016 05:39:32.762" starttime="20191016 05:39:29.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 05:39:32.764" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20191016 05:39:32.764" starttime="20191016 05:39:32.763"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 05:39:32.765" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 05:39:32.766" starttime="20191016 05:39:32.765"></status>
</kw>
<msg timestamp="20191016 05:39:32.766" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20191016 05:39:32.766" starttime="20191016 05:39:29.959"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20191016 05:39:32.767" starttime="20191016 05:39:32.767"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 05:39:32.771" level="INFO">Running command 'ozone sh bucket create o3://om:9862/96779-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 05:39:35.697" level="INFO">${rc} = 255</msg>
<msg timestamp="20191016 05:39:35.698" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191016 05:39:35.698" starttime="20191016 05:39:32.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 05:39:35.700" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_NOT_FOUND Bucket bb1 is not found</msg>
<status status="PASS" endtime="20191016 05:39:35.700" starttime="20191016 05:39:35.699"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 05:39:35.701" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191016 05:39:35.702" level="FAIL">255 != 0</msg>
<status status="FAIL" endtime="20191016 05:39:35.702" starttime="20191016 05:39:35.700"></status>
</kw>
<status status="FAIL" endtime="20191016 05:39:35.703" starttime="20191016 05:39:32.768"></status>
</kw>
<status status="FAIL" endtime="20191016 05:39:35.703" starttime="20191016 05:39:18.521"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="FAIL" endtime="20191016 05:39:35.703" critical="yes" starttime="20191016 05:39:18.472">255 != 0</status>
</test>
<test id="s1-s2-t2" name="RpcClient volume acls">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 05:39:35.710" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 05:39:35.715" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 05:39:35.715" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20191016 05:39:35.715" starttime="20191016 05:39:35.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 05:39:35.717" level="INFO">scm</msg>
<status status="PASS" endtime="20191016 05:39:35.717" starttime="20191016 05:39:35.716"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 05:39:35.717" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 05:39:35.718" starttime="20191016 05:39:35.717"></status>
</kw>
<msg timestamp="20191016 05:39:35.718" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20191016 05:39:35.718" starttime="20191016 05:39:35.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20191016 05:39:35.719" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20191016 05:39:35.719" starttime="20191016 05:39:35.718"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 05:39:35.722" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 05:39:35.755" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 05:39:35.756" level="INFO">${output} = </msg>
<status status="PASS" endtime="20191016 05:39:35.756" starttime="20191016 05:39:35.721"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 05:39:35.757" level="INFO"></msg>
<status status="PASS" endtime="20191016 05:39:35.757" starttime="20191016 05:39:35.756"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 05:39:35.758" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 05:39:35.758" starttime="20191016 05:39:35.757"></status>
</kw>
<status status="PASS" endtime="20191016 05:39:35.758" starttime="20191016 05:39:35.720"></status>
</kw>
<status status="PASS" endtime="20191016 05:39:35.758" starttime="20191016 05:39:35.719"></status>
</kw>
<status status="PASS" endtime="20191016 05:39:35.758" starttime="20191016 05:39:35.706"></status>
</kw>
<status status="PASS" endtime="20191016 05:39:35.759" starttime="20191016 05:39:35.705"></status>
</kw>
<kw name="Test Volume Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 05:39:35.764" level="INFO">Running command 'ozone sh volume create o3://om:9862/96779-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 05:39:38.609" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 05:39:38.609" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191016 05:39:38.609" starttime="20191016 05:39:35.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 05:39:38.612" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20191016 05:39:38.612" starttime="20191016 05:39:38.610"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 05:39:38.613" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 05:39:38.613" starttime="20191016 05:39:38.612"></status>
</kw>
<status status="PASS" endtime="20191016 05:39:38.614" starttime="20191016 05:39:35.760"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 05:39:38.618" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/96779-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 05:39:41.351" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 05:39:41.351" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191016 05:39:41.351" starttime="20191016 05:39:38.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 05:39:41.353" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20191016 05:39:41.353" starttime="20191016 05:39:41.352"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 05:39:41.354" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 05:39:41.354" starttime="20191016 05:39:41.353"></status>
</kw>
<msg timestamp="20191016 05:39:41.355" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191016 05:39:41.355" starttime="20191016 05:39:38.614"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" endtime="20191016 05:39:41.357" starttime="20191016 05:39:41.355"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 05:39:41.361" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/96779-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 05:39:43.979" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 05:39:43.979" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191016 05:39:43.979" starttime="20191016 05:39:41.359"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 05:39:43.982" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
Acl added successfully: true</msg>
<status status="PASS" endtime="20191016 05:39:43.982" starttime="20191016 05:39:43.980"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 05:39:43.983" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 05:39:43.983" starttime="20191016 05:39:43.982"></status>
</kw>
<msg timestamp="20191016 05:39:43.984" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191016 05:39:43.984" starttime="20191016 05:39:41.357"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 05:39:43.989" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/96779-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 05:39:46.857" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 05:39:46.857" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191016 05:39:46.857" starttime="20191016 05:39:43.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 05:39:46.860" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20191016 05:39:46.860" starttime="20191016 05:39:46.858"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 05:39:46.861" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 05:39:46.861" starttime="20191016 05:39:46.860"></status>
</kw>
<msg timestamp="20191016 05:39:46.862" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191016 05:39:46.862" starttime="20191016 05:39:43.985"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" endtime="20191016 05:39:46.865" starttime="20191016 05:39:46.862"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 05:39:46.870" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/96779-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 05:39:49.819" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 05:39:49.819" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191016 05:39:49.819" starttime="20191016 05:39:46.867"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 05:39:49.821" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
Acl removed successfully: false</msg>
<status status="PASS" endtime="20191016 05:39:49.821" starttime="20191016 05:39:49.820"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 05:39:49.822" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 05:39:49.822" starttime="20191016 05:39:49.821"></status>
</kw>
<msg timestamp="20191016 05:39:49.822" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191016 05:39:49.822" starttime="20191016 05:39:46.865"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 05:39:49.826" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/96779-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 05:39:52.475" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 05:39:52.475" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191016 05:39:52.475" starttime="20191016 05:39:49.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 05:39:52.477" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20191016 05:39:52.478" starttime="20191016 05:39:52.476"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 05:39:52.479" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 05:39:52.479" starttime="20191016 05:39:52.478"></status>
</kw>
<msg timestamp="20191016 05:39:52.480" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191016 05:39:52.480" starttime="20191016 05:39:49.823"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" endtime="20191016 05:39:52.483" starttime="20191016 05:39:52.480"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 05:39:52.487" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/96779-rpcwoport2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 05:39:55.475" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 05:39:55.475" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191016 05:39:55.475" starttime="20191016 05:39:52.484"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 05:39:55.477" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
 acls103 user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]Acl set successfully: true</msg>
<status status="PASS" endtime="20191016 05:39:55.477" starttime="20191016 05:39:55.476"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 05:39:55.479" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 05:39:55.479" starttime="20191016 05:39:55.478"></status>
</kw>
<msg timestamp="20191016 05:39:55.480" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191016 05:39:55.480" starttime="20191016 05:39:52.483"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 05:39:55.484" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/96779-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 05:39:58.435" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 05:39:58.435" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191016 05:39:58.435" starttime="20191016 05:39:55.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 05:39:58.437" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20191016 05:39:58.437" starttime="20191016 05:39:58.436"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 05:39:58.438" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 05:39:58.439" starttime="20191016 05:39:58.438"></status>
</kw>
<msg timestamp="20191016 05:39:58.439" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191016 05:39:58.439" starttime="20191016 05:39:55.480"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" endtime="20191016 05:39:58.440" starttime="20191016 05:39:58.439"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" endtime="20191016 05:39:58.442" starttime="20191016 05:39:58.441"></status>
</kw>
<status status="PASS" endtime="20191016 05:39:58.443" starttime="20191016 05:39:35.759"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20191016 05:39:58.443" critical="yes" starttime="20191016 05:39:35.704"></status>
</test>
<test id="s1-s2-t3" name="RpcClient bucket acls">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 05:39:58.449" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 05:39:58.457" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 05:39:58.457" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20191016 05:39:58.457" starttime="20191016 05:39:58.447"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 05:39:58.459" level="INFO">scm</msg>
<status status="PASS" endtime="20191016 05:39:58.459" starttime="20191016 05:39:58.458"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 05:39:58.460" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 05:39:58.461" starttime="20191016 05:39:58.460"></status>
</kw>
<msg timestamp="20191016 05:39:58.461" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20191016 05:39:58.461" starttime="20191016 05:39:58.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20191016 05:39:58.463" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20191016 05:39:58.463" starttime="20191016 05:39:58.462"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 05:39:58.469" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 05:39:58.516" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 05:39:58.516" level="INFO">${output} = </msg>
<status status="PASS" endtime="20191016 05:39:58.516" starttime="20191016 05:39:58.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 05:39:58.518" level="INFO"></msg>
<status status="PASS" endtime="20191016 05:39:58.519" starttime="20191016 05:39:58.517"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 05:39:58.520" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 05:39:58.520" starttime="20191016 05:39:58.519"></status>
</kw>
<status status="PASS" endtime="20191016 05:39:58.521" starttime="20191016 05:39:58.465"></status>
</kw>
<status status="PASS" endtime="20191016 05:39:58.521" starttime="20191016 05:39:58.464"></status>
</kw>
<status status="PASS" endtime="20191016 05:39:58.521" starttime="20191016 05:39:58.446"></status>
</kw>
<status status="PASS" endtime="20191016 05:39:58.522" starttime="20191016 05:39:58.445"></status>
</kw>
<kw name="Test Bucket Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 05:39:58.527" level="INFO">Running command 'ozone sh bucket create o3://om:9862/96779-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 05:40:01.354" level="INFO">${rc} = 255</msg>
<msg timestamp="20191016 05:40:01.354" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191016 05:40:01.354" starttime="20191016 05:39:58.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 05:40:01.357" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_NOT_FOUND Bucket bb1 is not found</msg>
<status status="PASS" endtime="20191016 05:40:01.357" starttime="20191016 05:40:01.355"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 05:40:01.358" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191016 05:40:01.359" level="FAIL">255 != 0</msg>
<status status="FAIL" endtime="20191016 05:40:01.359" starttime="20191016 05:40:01.357"></status>
</kw>
<status status="FAIL" endtime="20191016 05:40:01.360" starttime="20191016 05:39:58.523"></status>
</kw>
<status status="FAIL" endtime="20191016 05:40:01.360" starttime="20191016 05:39:58.522"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="FAIL" endtime="20191016 05:40:01.361" critical="yes" starttime="20191016 05:39:58.444">255 != 0</status>
</test>
<test id="s1-s2-t4" name="RpcClient key acls">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 05:40:01.369" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 05:40:01.375" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 05:40:01.375" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20191016 05:40:01.375" starttime="20191016 05:40:01.366"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 05:40:01.377" level="INFO">scm</msg>
<status status="PASS" endtime="20191016 05:40:01.377" starttime="20191016 05:40:01.376"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 05:40:01.378" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 05:40:01.378" starttime="20191016 05:40:01.377"></status>
</kw>
<msg timestamp="20191016 05:40:01.379" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20191016 05:40:01.379" starttime="20191016 05:40:01.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20191016 05:40:01.380" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20191016 05:40:01.380" starttime="20191016 05:40:01.379"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 05:40:01.385" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 05:40:01.401" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 05:40:01.401" level="INFO">${output} = </msg>
<status status="PASS" endtime="20191016 05:40:01.402" starttime="20191016 05:40:01.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 05:40:01.403" level="INFO"></msg>
<status status="PASS" endtime="20191016 05:40:01.403" starttime="20191016 05:40:01.402"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 05:40:01.405" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 05:40:01.405" starttime="20191016 05:40:01.404"></status>
</kw>
<status status="PASS" endtime="20191016 05:40:01.405" starttime="20191016 05:40:01.382"></status>
</kw>
<status status="PASS" endtime="20191016 05:40:01.405" starttime="20191016 05:40:01.381"></status>
</kw>
<status status="PASS" endtime="20191016 05:40:01.406" starttime="20191016 05:40:01.364"></status>
</kw>
<status status="PASS" endtime="20191016 05:40:01.406" starttime="20191016 05:40:01.363"></status>
</kw>
<kw name="Test key Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 05:40:01.411" level="INFO">Running command 'ozone sh key put o3://om:9862/96779-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 05:40:04.123" level="INFO">${rc} = 255</msg>
<msg timestamp="20191016 05:40:04.123" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191016 05:40:04.123" starttime="20191016 05:40:01.409"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 05:40:04.125" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_NOT_FOUND Bucket bb1 is not found</msg>
<status status="PASS" endtime="20191016 05:40:04.125" starttime="20191016 05:40:04.124"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 05:40:04.126" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191016 05:40:04.127" level="FAIL">255 != 0</msg>
<status status="FAIL" endtime="20191016 05:40:04.127" starttime="20191016 05:40:04.125"></status>
</kw>
<status status="FAIL" endtime="20191016 05:40:04.127" starttime="20191016 05:40:01.407"></status>
</kw>
<status status="FAIL" endtime="20191016 05:40:04.128" starttime="20191016 05:40:01.406"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="FAIL" endtime="20191016 05:40:04.128" critical="yes" starttime="20191016 05:40:01.362">255 != 0</status>
</test>
<test id="s1-s2-t5" name="RpcClient without host">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 05:40:04.135" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 05:40:04.141" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 05:40:04.142" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20191016 05:40:04.142" starttime="20191016 05:40:04.133"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 05:40:04.143" level="INFO">scm</msg>
<status status="PASS" endtime="20191016 05:40:04.144" starttime="20191016 05:40:04.142"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 05:40:04.145" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 05:40:04.145" starttime="20191016 05:40:04.144"></status>
</kw>
<msg timestamp="20191016 05:40:04.145" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20191016 05:40:04.145" starttime="20191016 05:40:04.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20191016 05:40:04.147" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20191016 05:40:04.147" starttime="20191016 05:40:04.146"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 05:40:04.151" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 05:40:04.198" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 05:40:04.198" level="INFO">${output} = </msg>
<status status="PASS" endtime="20191016 05:40:04.198" starttime="20191016 05:40:04.149"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 05:40:04.200" level="INFO"></msg>
<status status="PASS" endtime="20191016 05:40:04.200" starttime="20191016 05:40:04.199"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 05:40:04.201" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 05:40:04.201" starttime="20191016 05:40:04.200"></status>
</kw>
<status status="PASS" endtime="20191016 05:40:04.201" starttime="20191016 05:40:04.148"></status>
</kw>
<status status="PASS" endtime="20191016 05:40:04.202" starttime="20191016 05:40:04.147"></status>
</kw>
<status status="PASS" endtime="20191016 05:40:04.202" starttime="20191016 05:40:04.131"></status>
</kw>
<status status="PASS" endtime="20191016 05:40:04.202" starttime="20191016 05:40:04.130"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 05:40:04.206" level="INFO">Running command 'ozone sh volume create o3:///96779-rpcwport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 05:40:07.033" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 05:40:07.034" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191016 05:40:07.034" starttime="20191016 05:40:04.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 05:40:07.035" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20191016 05:40:07.035" starttime="20191016 05:40:07.034"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 05:40:07.036" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 05:40:07.037" starttime="20191016 05:40:07.036"></status>
</kw>
<msg timestamp="20191016 05:40:07.037" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191016 05:40:07.037" starttime="20191016 05:40:04.203"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20191016 05:40:07.038" starttime="20191016 05:40:07.037"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | grep -Ev 'Removed|WARN|DEBUG|ERROR|INFO|TRACE' | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 05:40:07.042" level="INFO">Running command 'ozone sh volume list o3:/// | grep -Ev 'Removed|WARN|DEBUG|ERROR|INFO|TRACE' | jq -r '. | select(.name=="96779-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 05:40:09.938" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 05:40:09.938" level="INFO">${output} = {
  "metadata": {},
  "name": "96779-rpcwport",
  "admin": "root",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": 1571204406961,
  "acls": [
    {
      "type": "USER",
      "name": "testus...</msg>
<status status="PASS" endtime="20191016 05:40:09.938" starttime="20191016 05:40:07.039"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 05:40:09.940" level="INFO">{
  "metadata": {},
  "name": "96779-rpcwport",
  "admin": "root",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": 1571204406961,
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" endtime="20191016 05:40:09.940" starttime="20191016 05:40:09.939"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 05:40:09.942" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 05:40:09.942" starttime="20191016 05:40:09.941"></status>
</kw>
<msg timestamp="20191016 05:40:09.942" level="INFO">${result} = {
  "metadata": {},
  "name": "96779-rpcwport",
  "admin": "root",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": 1571204406961,
  "acls": [
    {
      "type": "USER",
      "name": "testus...</msg>
<status status="PASS" endtime="20191016 05:40:09.943" starttime="20191016 05:40:07.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20191016 05:40:09.944" starttime="20191016 05:40:09.943"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | grep -Ev 'Removed|DEBUG|ERROR|INFO|TRACE|WARN' | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 05:40:09.948" level="INFO">Running command 'ozone sh volume list | grep -Ev 'Removed|DEBUG|ERROR|INFO|TRACE|WARN' | jq -r '. | select(.name=="96779-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 05:40:12.726" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 05:40:12.726" level="INFO">${output} = {
  "metadata": {},
  "name": "96779-rpcwport",
  "admin": "root",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": 1571204406961,
  "acls": [
    {
      "type": "USER",
      "name": "testus...</msg>
<status status="PASS" endtime="20191016 05:40:12.726" starttime="20191016 05:40:09.945"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 05:40:12.728" level="INFO">{
  "metadata": {},
  "name": "96779-rpcwport",
  "admin": "root",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": 1571204406961,
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" endtime="20191016 05:40:12.728" starttime="20191016 05:40:12.727"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 05:40:12.730" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 05:40:12.730" starttime="20191016 05:40:12.729"></status>
</kw>
<msg timestamp="20191016 05:40:12.731" level="INFO">${result} = {
  "metadata": {},
  "name": "96779-rpcwport",
  "admin": "root",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": 1571204406961,
  "acls": [
    {
      "type": "USER",
      "name": "testus...</msg>
<status status="PASS" endtime="20191016 05:40:12.731" starttime="20191016 05:40:09.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20191016 05:40:12.732" starttime="20191016 05:40:12.731"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 05:40:12.737" level="INFO">Running command 'ozone sh volume update o3:///96779-rpcwport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 05:40:15.624" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 05:40:15.624" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191016 05:40:15.624" starttime="20191016 05:40:12.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 05:40:15.625" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "name" : "96779-rpcwport",
  "admin" : "root",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "creationTime" : 1571204406961,
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" endtime="20191016 05:40:15.626" starttime="20191016 05:40:15.625"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 05:40:15.626" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 05:40:15.627" starttime="20191016 05:40:15.626"></status>
</kw>
<status status="PASS" endtime="20191016 05:40:15.627" starttime="20191016 05:40:12.732"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | grep -Ev 'Removed|WARN|DEBUG|ERROR|INFO|TRACE' | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 05:40:15.630" level="INFO">Running command 'ozone sh volume info o3:///96779-rpcwport | grep -Ev 'Removed|WARN|DEBUG|ERROR|INFO|TRACE' | jq -r '. | select(.name=="96779-rpcwport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 05:40:18.458" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 05:40:18.458" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20191016 05:40:18.458" starttime="20191016 05:40:15.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 05:40:18.460" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20191016 05:40:18.460" starttime="20191016 05:40:18.459"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 05:40:18.461" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 05:40:18.462" starttime="20191016 05:40:18.461"></status>
</kw>
<msg timestamp="20191016 05:40:18.462" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20191016 05:40:18.462" starttime="20191016 05:40:15.627"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20191016 05:40:18.463" starttime="20191016 05:40:18.463"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 05:40:18.467" level="INFO">Running command 'ozone sh bucket create o3:///96779-rpcwport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 05:40:21.092" level="INFO">${rc} = 255</msg>
<msg timestamp="20191016 05:40:21.092" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191016 05:40:21.093" starttime="20191016 05:40:18.465"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 05:40:21.094" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_NOT_FOUND Bucket bb1 is not found</msg>
<status status="PASS" endtime="20191016 05:40:21.094" starttime="20191016 05:40:21.093"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 05:40:21.095" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191016 05:40:21.095" level="FAIL">255 != 0</msg>
<status status="FAIL" endtime="20191016 05:40:21.095" starttime="20191016 05:40:21.094"></status>
</kw>
<status status="FAIL" endtime="20191016 05:40:21.095" starttime="20191016 05:40:18.464"></status>
</kw>
<status status="FAIL" endtime="20191016 05:40:21.096" starttime="20191016 05:40:04.202"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="FAIL" endtime="20191016 05:40:21.096" critical="yes" starttime="20191016 05:40:04.129">255 != 0</status>
</test>
<test id="s1-s2-t6" name="RpcClient without scheme">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 05:40:21.103" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 05:40:21.107" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 05:40:21.107" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20191016 05:40:21.107" starttime="20191016 05:40:21.101"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 05:40:21.109" level="INFO">scm</msg>
<status status="PASS" endtime="20191016 05:40:21.109" starttime="20191016 05:40:21.108"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 05:40:21.109" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 05:40:21.110" starttime="20191016 05:40:21.109"></status>
</kw>
<msg timestamp="20191016 05:40:21.110" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20191016 05:40:21.110" starttime="20191016 05:40:21.100"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20191016 05:40:21.111" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20191016 05:40:21.111" starttime="20191016 05:40:21.110"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 05:40:21.114" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 05:40:21.129" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 05:40:21.129" level="INFO">${output} = </msg>
<status status="PASS" endtime="20191016 05:40:21.129" starttime="20191016 05:40:21.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 05:40:21.131" level="INFO"></msg>
<status status="PASS" endtime="20191016 05:40:21.131" starttime="20191016 05:40:21.130"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 05:40:21.132" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 05:40:21.133" starttime="20191016 05:40:21.132"></status>
</kw>
<status status="PASS" endtime="20191016 05:40:21.133" starttime="20191016 05:40:21.112"></status>
</kw>
<status status="PASS" endtime="20191016 05:40:21.133" starttime="20191016 05:40:21.111"></status>
</kw>
<status status="PASS" endtime="20191016 05:40:21.134" starttime="20191016 05:40:21.099"></status>
</kw>
<status status="PASS" endtime="20191016 05:40:21.134" starttime="20191016 05:40:21.098"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 05:40:21.140" level="INFO">Running command 'ozone sh volume create /96779-rpcwoscheme --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 05:40:23.948" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 05:40:23.949" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191016 05:40:23.949" starttime="20191016 05:40:21.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 05:40:23.950" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20191016 05:40:23.951" starttime="20191016 05:40:23.949"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 05:40:23.952" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 05:40:23.952" starttime="20191016 05:40:23.951"></status>
</kw>
<msg timestamp="20191016 05:40:23.953" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191016 05:40:23.953" starttime="20191016 05:40:21.136"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20191016 05:40:23.954" starttime="20191016 05:40:23.953"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | grep -Ev 'Removed|WARN|DEBUG|ERROR|INFO|TRACE' | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 05:40:23.958" level="INFO">Running command 'ozone sh volume list / | grep -Ev 'Removed|WARN|DEBUG|ERROR|INFO|TRACE' | jq -r '. | select(.name=="96779-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 05:40:26.722" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 05:40:26.722" level="INFO">${output} = {
  "metadata": {},
  "name": "96779-rpcwoscheme",
  "admin": "root",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": 1571204423854,
  "acls": [
    {
      "type": "USER",
      "name": "tes...</msg>
<status status="PASS" endtime="20191016 05:40:26.722" starttime="20191016 05:40:23.955"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 05:40:26.724" level="INFO">{
  "metadata": {},
  "name": "96779-rpcwoscheme",
  "admin": "root",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": 1571204423854,
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" endtime="20191016 05:40:26.724" starttime="20191016 05:40:26.723"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 05:40:26.725" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 05:40:26.725" starttime="20191016 05:40:26.724"></status>
</kw>
<msg timestamp="20191016 05:40:26.726" level="INFO">${result} = {
  "metadata": {},
  "name": "96779-rpcwoscheme",
  "admin": "root",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": 1571204423854,
  "acls": [
    {
      "type": "USER",
      "name": "tes...</msg>
<status status="PASS" endtime="20191016 05:40:26.726" starttime="20191016 05:40:23.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20191016 05:40:26.727" starttime="20191016 05:40:26.726"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | grep -Ev 'Removed|DEBUG|ERROR|INFO|TRACE|WARN' | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 05:40:26.731" level="INFO">Running command 'ozone sh volume list | grep -Ev 'Removed|DEBUG|ERROR|INFO|TRACE|WARN' | jq -r '. | select(.name=="96779-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 05:40:29.383" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 05:40:29.383" level="INFO">${output} = {
  "metadata": {},
  "name": "96779-rpcwoscheme",
  "admin": "root",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": 1571204423854,
  "acls": [
    {
      "type": "USER",
      "name": "tes...</msg>
<status status="PASS" endtime="20191016 05:40:29.384" starttime="20191016 05:40:26.728"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 05:40:29.386" level="INFO">{
  "metadata": {},
  "name": "96779-rpcwoscheme",
  "admin": "root",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": 1571204423854,
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" endtime="20191016 05:40:29.386" starttime="20191016 05:40:29.384"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 05:40:29.387" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 05:40:29.387" starttime="20191016 05:40:29.386"></status>
</kw>
<msg timestamp="20191016 05:40:29.388" level="INFO">${result} = {
  "metadata": {},
  "name": "96779-rpcwoscheme",
  "admin": "root",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": 1571204423854,
  "acls": [
    {
      "type": "USER",
      "name": "tes...</msg>
<status status="PASS" endtime="20191016 05:40:29.388" starttime="20191016 05:40:26.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20191016 05:40:29.389" starttime="20191016 05:40:29.388"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 05:40:29.393" level="INFO">Running command 'ozone sh volume update /96779-rpcwoscheme --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 05:40:32.180" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 05:40:32.180" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191016 05:40:32.180" starttime="20191016 05:40:29.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 05:40:32.182" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "name" : "96779-rpcwoscheme",
  "admin" : "root",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "creationTime" : 1571204423854,
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" endtime="20191016 05:40:32.182" starttime="20191016 05:40:32.181"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 05:40:32.183" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 05:40:32.183" starttime="20191016 05:40:32.182"></status>
</kw>
<status status="PASS" endtime="20191016 05:40:32.184" starttime="20191016 05:40:29.389"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | grep -Ev 'Removed|WARN|DEBUG|ERROR|INFO|TRACE' | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 05:40:32.188" level="INFO">Running command 'ozone sh volume info /96779-rpcwoscheme | grep -Ev 'Removed|WARN|DEBUG|ERROR|INFO|TRACE' | jq -r '. | select(.name=="96779-rpcwoscheme") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 05:40:34.912" level="INFO">${rc} = 0</msg>
<msg timestamp="20191016 05:40:34.912" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20191016 05:40:34.912" starttime="20191016 05:40:32.186"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 05:40:34.914" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20191016 05:40:34.915" starttime="20191016 05:40:34.913"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 05:40:34.916" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191016 05:40:34.916" starttime="20191016 05:40:34.915"></status>
</kw>
<msg timestamp="20191016 05:40:34.917" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20191016 05:40:34.917" starttime="20191016 05:40:32.184"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20191016 05:40:34.918" starttime="20191016 05:40:34.917"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191016 05:40:34.923" level="INFO">Running command 'ozone sh bucket create /96779-rpcwoscheme/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20191016 05:40:37.680" level="INFO">${rc} = 255</msg>
<msg timestamp="20191016 05:40:37.680" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191016 05:40:37.680" starttime="20191016 05:40:34.920"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191016 05:40:37.682" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
BUCKET_NOT_FOUND Bucket bb1 is not found</msg>
<status status="PASS" endtime="20191016 05:40:37.682" starttime="20191016 05:40:37.681"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191016 05:40:37.683" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191016 05:40:37.685" level="FAIL">255 != 0</msg>
<status status="FAIL" endtime="20191016 05:40:37.685" starttime="20191016 05:40:37.682"></status>
</kw>
<status status="FAIL" endtime="20191016 05:40:37.685" starttime="20191016 05:40:34.919"></status>
</kw>
<status status="FAIL" endtime="20191016 05:40:37.685" starttime="20191016 05:40:21.134"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="FAIL" endtime="20191016 05:40:37.686" critical="yes" starttime="20191016 05:40:21.097">255 != 0</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" endtime="20191016 05:40:37.688" starttime="20191016 05:39:18.461"></status>
</suite>
<status status="FAIL" endtime="20191016 05:40:37.694" starttime="20191016 05:39:09.734"></status>
</suite>
<statistics>
<total>
<stat fail="6" pass="2">Critical Tests</stat>
<stat fail="6" pass="2">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="6" id="s1" name="ozonesecure-basic" pass="2">ozonesecure-basic</stat>
<stat fail="1" id="s1-s1" name="Basic" pass="1">ozonesecure-basic.Basic</stat>
<stat fail="5" id="s1-s2" name="Ozone-Shell" pass="1">ozonesecure-basic.Ozone-Shell</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
