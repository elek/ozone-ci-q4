<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20191007 12:10:27.941" generator="Robot 3.1.2 (Python 2.7.5 on linux2)">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1" name="hadoop27-createmrenv">
<test id="s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="commonlib">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191007 12:10:28.036" level="INFO">Running command 'ozone sh bucket info /vol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20191007 12:10:30.735" level="INFO">${rc} = 255</msg>
<msg timestamp="20191007 12:10:30.736" level="INFO">${output} = VOLUME_NOT_FOUND Volume vol1 is not found</msg>
<status status="PASS" endtime="20191007 12:10:30.736" starttime="20191007 12:10:28.034"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191007 12:10:30.738" level="INFO">VOLUME_NOT_FOUND Volume vol1 is not found</msg>
<status status="PASS" endtime="20191007 12:10:30.739" starttime="20191007 12:10:30.737"></status>
</kw>
<msg timestamp="20191007 12:10:30.739" level="INFO">${result} = VOLUME_NOT_FOUND Volume vol1 is not found</msg>
<status status="PASS" endtime="20191007 12:10:30.739" starttime="20191007 12:10:28.034"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191007 12:10:30.745" level="INFO">Running command 'ozone sh volume create /vol1 --user hadoop --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20191007 12:10:33.209" level="INFO">${rc} = 0</msg>
<msg timestamp="20191007 12:10:33.209" level="INFO">${output} = </msg>
<status status="PASS" endtime="20191007 12:10:33.209" starttime="20191007 12:10:30.742"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191007 12:10:33.211" level="INFO"></msg>
<status status="PASS" endtime="20191007 12:10:33.212" starttime="20191007 12:10:33.210"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191007 12:10:33.213" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191007 12:10:33.213" starttime="20191007 12:10:33.212"></status>
</kw>
<msg timestamp="20191007 12:10:33.214" level="INFO">${result} = </msg>
<status status="PASS" endtime="20191007 12:10:33.214" starttime="20191007 12:10:30.742"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20191007 12:10:33.215" starttime="20191007 12:10:33.214"></status>
</kw>
<status status="PASS" endtime="20191007 12:10:33.215" starttime="20191007 12:10:30.741"></status>
</kw>
<status status="PASS" endtime="20191007 12:10:33.215" starttime="20191007 12:10:30.740"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191007 12:10:33.224" level="INFO">Running command 'ozone sh bucket create /vol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20191007 12:10:35.491" level="INFO">${rc} = 0</msg>
<msg timestamp="20191007 12:10:35.491" level="INFO">${output} = </msg>
<status status="PASS" endtime="20191007 12:10:35.491" starttime="20191007 12:10:33.219"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191007 12:10:35.493" level="INFO"></msg>
<status status="PASS" endtime="20191007 12:10:35.493" starttime="20191007 12:10:35.492"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191007 12:10:35.494" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191007 12:10:35.494" starttime="20191007 12:10:35.493"></status>
</kw>
<status status="PASS" endtime="20191007 12:10:35.495" starttime="20191007 12:10:33.218"></status>
</kw>
<status status="PASS" endtime="20191007 12:10:35.495" starttime="20191007 12:10:33.217"></status>
</kw>
<status status="PASS" endtime="20191007 12:10:35.495" starttime="20191007 12:10:33.216"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20191007 12:10:35.497" starttime="20191007 12:10:35.496"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191007 12:10:35.500" level="INFO">Running command 'ozone sh bucket info /vol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20191007 12:10:37.776" level="INFO">${rc} = 0</msg>
<msg timestamp="20191007 12:10:37.776" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "vol1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : 1570450235406,
  "encryptionKeyName" : null
}</msg>
<status status="PASS" endtime="20191007 12:10:37.776" starttime="20191007 12:10:35.498"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191007 12:10:37.778" level="INFO">{
  "metadata" : { },
  "volumeName" : "vol1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : 1570450235406,
  "encryptionKeyName" : null
}</msg>
<status status="PASS" endtime="20191007 12:10:37.778" starttime="20191007 12:10:37.777"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191007 12:10:37.779" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191007 12:10:37.779" starttime="20191007 12:10:37.778"></status>
</kw>
<msg timestamp="20191007 12:10:37.780" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "vol1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "creationTime" : 1570450235406,
  "encryptionKeyName" : null
}</msg>
<status status="PASS" endtime="20191007 12:10:37.780" starttime="20191007 12:10:35.497"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20191007 12:10:37.781" starttime="20191007 12:10:37.780"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put /vol1/bucket1/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191007 12:10:37.784" level="INFO">Running command 'ozone sh key put /vol1/bucket1/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20191007 12:10:43.631" level="INFO">${rc} = 0</msg>
<msg timestamp="20191007 12:10:43.631" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.ratis.thirdparty.com.google.protobuf.UnsafeUtil (file:/opt/hadoop/share/ozone/lib/ratis-th...</msg>
<status status="PASS" endtime="20191007 12:10:43.631" starttime="20191007 12:10:37.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191007 12:10:43.633" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.ratis.thirdparty.com.google.protobuf.UnsafeUtil (file:/opt/hadoop/share/ozone/lib/ratis-thirdparty-misc-0.2.0.jar) to field java.nio.Buffer.address
WARNING: Please consider reporting this to the maintainers of org.apache.ratis.thirdparty.com.google.protobuf.UnsafeUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20191007 12:10:43.633" starttime="20191007 12:10:43.632"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191007 12:10:43.634" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191007 12:10:43.634" starttime="20191007 12:10:43.633"></status>
</kw>
<status status="PASS" endtime="20191007 12:10:43.634" starttime="20191007 12:10:37.781"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20191007 12:10:43.635" critical="yes" starttime="20191007 12:10:28.032"></status>
</test>
<test id="s1-t2" name="Create user dir for hadoop">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone fs -mkdir /user</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191007 12:10:43.639" level="INFO">Running command 'ozone fs -mkdir /user 2&gt;&amp;1'.</msg>
<msg timestamp="20191007 12:10:46.337" level="INFO">${rc} = 0</msg>
<msg timestamp="20191007 12:10:46.337" level="INFO">${output} = </msg>
<status status="PASS" endtime="20191007 12:10:46.337" starttime="20191007 12:10:43.637"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191007 12:10:46.338" level="INFO"></msg>
<status status="PASS" endtime="20191007 12:10:46.339" starttime="20191007 12:10:46.338"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191007 12:10:46.339" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191007 12:10:46.339" starttime="20191007 12:10:46.339"></status>
</kw>
<status status="PASS" endtime="20191007 12:10:46.340" starttime="20191007 12:10:43.636"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone fs -mkdir /user/hadoop</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191007 12:10:46.342" level="INFO">Running command 'ozone fs -mkdir /user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20191007 12:10:48.834" level="INFO">${rc} = 0</msg>
<msg timestamp="20191007 12:10:48.834" level="INFO">${output} = </msg>
<status status="PASS" endtime="20191007 12:10:48.834" starttime="20191007 12:10:46.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191007 12:10:48.835" level="INFO"></msg>
<status status="PASS" endtime="20191007 12:10:48.835" starttime="20191007 12:10:48.834"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191007 12:10:48.836" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191007 12:10:48.836" starttime="20191007 12:10:48.835"></status>
</kw>
<status status="PASS" endtime="20191007 12:10:48.836" starttime="20191007 12:10:46.340"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20191007 12:10:48.837" critical="yes" starttime="20191007 12:10:43.635"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20191007 12:10:48.837" starttime="20191007 12:10:27.942"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="2">Critical Tests</stat>
<stat fail="0" pass="2">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="hadoop27-createmrenv" pass="2">hadoop27-createmrenv</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
