<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20191003 15:37:53.713" generator="Robot 3.1.2 (Python 2.7.5 on linux2)">
<suite source="/opt/hadoop/smoketest/basic" id="s1" name="ozonesecure-basic">
<suite source="/opt/hadoop/smoketest/basic/basic.robot" id="s1-s1" name="Basic">
<test id="s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191003 15:37:53.772" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20191003 15:37:53.779" level="INFO">${rc} = 0</msg>
<msg timestamp="20191003 15:37:53.779" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20191003 15:37:53.780" starttime="20191003 15:37:53.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191003 15:37:53.781" level="INFO">scm</msg>
<status status="PASS" endtime="20191003 15:37:53.781" starttime="20191003 15:37:53.780"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191003 15:37:53.782" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191003 15:37:53.782" starttime="20191003 15:37:53.782"></status>
</kw>
<msg timestamp="20191003 15:37:53.783" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20191003 15:37:53.783" starttime="20191003 15:37:53.770"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191003 15:37:53.787" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20191003 15:37:53.803" level="INFO">${rc} = 0</msg>
<msg timestamp="20191003 15:37:53.803" level="INFO">${output} = </msg>
<status status="PASS" endtime="20191003 15:37:53.803" starttime="20191003 15:37:53.785"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191003 15:37:53.804" level="INFO"></msg>
<status status="PASS" endtime="20191003 15:37:53.804" starttime="20191003 15:37:53.804"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191003 15:37:53.805" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191003 15:37:53.805" starttime="20191003 15:37:53.805"></status>
</kw>
<status status="PASS" endtime="20191003 15:37:53.806" starttime="20191003 15:37:53.784"></status>
</kw>
<status status="PASS" endtime="20191003 15:37:53.806" starttime="20191003 15:37:53.784"></status>
</kw>
<status status="PASS" endtime="20191003 15:37:53.806" starttime="20191003 15:37:53.770"></status>
</kw>
<status status="PASS" endtime="20191003 15:37:53.806" starttime="20191003 15:37:53.769"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191003 15:37:53.809" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20191003 15:37:53.845" level="INFO">${rc} = 0</msg>
<msg timestamp="20191003 15:37:53.846" level="INFO">${output} = HTTP/1.1 401 Authentication required
Date: Thu, 03 Oct 2019 15:37:53 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Coo...</msg>
<status status="PASS" endtime="20191003 15:37:53.846" starttime="20191003 15:37:53.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191003 15:37:53.847" level="INFO">HTTP/1.1 401 Authentication required
Date: Thu, 03 Oct 2019 15:37:53 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 293

HTTP/1.1 200 OK
Date: Thu, 03 Oct 2019 15:37:53 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCB34fQ1BtYDotQ9Dx8K3MfDdzP/uO+g8K+D1sdo+Vrfv+TL+o21JC70zElsBVe97j+IyO9LVbU3zbAJPi+wXRNQgL
Set-Cookie: hadoop.auth="u=root&amp;p=HTTP/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1570153073838&amp;s=zYoRg5xLy+H/qeNSW7MPsVKSeXohmSXSQ6RQyUOkyK0="; Path=/; HttpOnly
Last-Modified: Thu, 03 Oct 2019 15:13:58 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" endtime="20191003 15:37:53.848" starttime="20191003 15:37:53.847"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191003 15:37:53.848" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191003 15:37:53.849" starttime="20191003 15:37:53.848"></status>
</kw>
<msg timestamp="20191003 15:37:53.849" level="INFO">${result} = HTTP/1.1 401 Authentication required
Date: Thu, 03 Oct 2019 15:37:53 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Coo...</msg>
<status status="PASS" endtime="20191003 15:37:53.849" starttime="20191003 15:37:53.807"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20191003 15:37:53.850" starttime="20191003 15:37:53.850"></status>
</kw>
<status status="PASS" endtime="20191003 15:37:53.850" critical="yes" starttime="20191003 15:37:53.768"></status>
</test>
<test id="s1-s1-t2" name="Start freon testing">
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191003 15:37:53.855" level="INFO">Running command 'ozone freon randomkeys --numOfVolumes 5 --numOfBuckets 5 --numOfKeys 5 --numOfThreads 1 2&gt;&amp;1'.</msg>
<msg timestamp="20191003 15:38:07.622" level="INFO">${rc} = 0</msg>
<msg timestamp="20191003 15:38:07.622" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191003 15:38:07.622" starttime="20191003 15:37:53.853"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191003 15:38:07.624" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release

 0.00% |?                                                                                                    |  0/125 Time: 0:00:00 0.00% |?                                                                                                    |  0/125 Time: 0:00:01 0.00% |?                                                                                                    |  0/125 Time: 0:00:02 4.80% |?????                                                                                                |  6/125 Time: 0:00:03 21.60% |??????????????????????                                                                               |  27/125 Time: 0:00:04 40.80% |?????????????????????????????????????????                                                            |  51/125 Time: 0:00:05 61.60% |??????????????????????????????????????????????????????????????                                       |  77/125 Time: 0:00:06 81.60% |??????????????????????????????????????????????????????????????????????????????????                   |  102/125 Time: 0:00:07 100.00% |?????????????????????????????????????????????????????????????????????????????????????????????????????|  125/125 Time: 0:00:08

***************************************************
Status: Success
Git Base Revision: e97acb3bd8f3befd27418996fa5d4b50bf2e17bf
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: ONE
Ratis replication type: STAND_ALONE
Average Time spent in volume creation: 00:00:00,198
Average Time spent in bucket creation: 00:00:00,154
Average Time spent in key creation: 00:00:01,510
Average Time spent in key write: 00:00:05,709
Total bytes written: 1280000
Total Execution time: 00:00:11,905
***************************************************</msg>
<status status="PASS" endtime="20191003 15:38:07.624" starttime="20191003 15:38:07.623"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191003 15:38:07.625" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191003 15:38:07.625" starttime="20191003 15:38:07.624"></status>
</kw>
<msg timestamp="20191003 15:38:07.625" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191003 15:38:07.625" starttime="20191003 15:37:53.852"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" endtime="20191003 15:38:07.626" starttime="20191003 15:38:07.626"></status>
</kw>
<status status="PASS" endtime="20191003 15:38:07.627" starttime="20191003 15:38:07.625"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>ERROR</arg>
</arguments>
<status status="PASS" endtime="20191003 15:38:07.627" starttime="20191003 15:38:07.627"></status>
</kw>
<status status="PASS" endtime="20191003 15:38:07.627" critical="yes" starttime="20191003 15:37:53.851"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20191003 15:38:07.628" starttime="20191003 15:37:53.741"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/ozone-shell.robot" id="s1-s2" name="Ozone-Shell">
<kw type="setup" name="Generate prefix">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20191003 15:38:07.638" level="INFO">${random} = 26847</msg>
<status status="PASS" endtime="20191003 15:38:07.638" starttime="20191003 15:38:07.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${prefix}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20191003 15:38:07.639" level="INFO">${prefix} = 26847</msg>
<status status="PASS" endtime="20191003 15:38:07.639" starttime="20191003 15:38:07.638"></status>
</kw>
<status status="PASS" endtime="20191003 15:38:07.639" starttime="20191003 15:38:07.637"></status>
</kw>
<test id="s1-s2-t1" name="RpcClient with port">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191003 15:38:07.644" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20191003 15:38:07.699" level="INFO">${rc} = 0</msg>
<msg timestamp="20191003 15:38:07.699" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20191003 15:38:07.699" starttime="20191003 15:38:07.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191003 15:38:07.700" level="INFO">scm</msg>
<status status="PASS" endtime="20191003 15:38:07.700" starttime="20191003 15:38:07.699"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191003 15:38:07.701" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191003 15:38:07.701" starttime="20191003 15:38:07.700"></status>
</kw>
<msg timestamp="20191003 15:38:07.701" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20191003 15:38:07.701" starttime="20191003 15:38:07.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20191003 15:38:07.703" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20191003 15:38:07.703" starttime="20191003 15:38:07.702"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191003 15:38:07.706" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20191003 15:38:07.773" level="INFO">${rc} = 0</msg>
<msg timestamp="20191003 15:38:07.773" level="INFO">${output} = </msg>
<status status="PASS" endtime="20191003 15:38:07.773" starttime="20191003 15:38:07.705"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191003 15:38:07.775" level="INFO"></msg>
<status status="PASS" endtime="20191003 15:38:07.775" starttime="20191003 15:38:07.774"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191003 15:38:07.776" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191003 15:38:07.777" starttime="20191003 15:38:07.776"></status>
</kw>
<status status="PASS" endtime="20191003 15:38:07.777" starttime="20191003 15:38:07.704"></status>
</kw>
<status status="PASS" endtime="20191003 15:38:07.777" starttime="20191003 15:38:07.703"></status>
</kw>
<status status="PASS" endtime="20191003 15:38:07.778" starttime="20191003 15:38:07.641"></status>
</kw>
<status status="PASS" endtime="20191003 15:38:07.778" starttime="20191003 15:38:07.640"></status>
</kw>
<kw name="Test ozone shell">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --quota 100TB</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191003 15:38:07.782" level="INFO">Running command 'ozone sh volume create o3://om:9862/26847-rpcwoport --quota 100TB 2&gt;&amp;1'.</msg>
<msg timestamp="20191003 15:38:10.314" level="INFO">${rc} = 0</msg>
<msg timestamp="20191003 15:38:10.314" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191003 15:38:10.314" starttime="20191003 15:38:07.780"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191003 15:38:10.315" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20191003 15:38:10.315" starttime="20191003 15:38:10.314"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191003 15:38:10.317" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191003 15:38:10.317" starttime="20191003 15:38:10.316"></status>
</kw>
<msg timestamp="20191003 15:38:10.317" level="INFO">${result} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191003 15:38:10.317" starttime="20191003 15:38:07.779"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20191003 15:38:10.318" starttime="20191003 15:38:10.318"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | grep -Ev 'Removed|WARN|DEBUG|ERROR|INFO|TRACE' | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191003 15:38:10.322" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | grep -Ev 'Removed|WARN|DEBUG|ERROR|INFO|TRACE' | jq -r '. | select(.name=="26847-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20191003 15:38:12.734" level="INFO">${rc} = 0</msg>
<msg timestamp="20191003 15:38:12.734" level="INFO">${output} = {
  "metadata": {},
  "name": "26847-rpcwoport",
  "admin": "root",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": 1570117090234,
  "acls": [
    {
      "type": "USER",
      "name": "testu...</msg>
<status status="PASS" endtime="20191003 15:38:12.735" starttime="20191003 15:38:10.320"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191003 15:38:12.736" level="INFO">{
  "metadata": {},
  "name": "26847-rpcwoport",
  "admin": "root",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": 1570117090234,
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" endtime="20191003 15:38:12.736" starttime="20191003 15:38:12.735"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191003 15:38:12.736" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191003 15:38:12.737" starttime="20191003 15:38:12.736"></status>
</kw>
<msg timestamp="20191003 15:38:12.737" level="INFO">${result} = {
  "metadata": {},
  "name": "26847-rpcwoport",
  "admin": "root",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": 1570117090234,
  "acls": [
    {
      "type": "USER",
      "name": "testu...</msg>
<status status="PASS" endtime="20191003 15:38:12.737" starttime="20191003 15:38:10.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20191003 15:38:12.738" starttime="20191003 15:38:12.737"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume list | grep -Ev 'Removed|DEBUG|ERROR|INFO|TRACE|WARN' | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191003 15:38:12.740" level="INFO">Running command 'ozone sh volume list | grep -Ev 'Removed|DEBUG|ERROR|INFO|TRACE|WARN' | jq -r '. | select(.name=="26847-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20191003 15:38:15.311" level="INFO">${rc} = 0</msg>
<msg timestamp="20191003 15:38:15.312" level="INFO">${output} = {
  "metadata": {},
  "name": "26847-rpcwoport",
  "admin": "root",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": 1570117090234,
  "acls": [
    {
      "type": "USER",
      "name": "testu...</msg>
<status status="PASS" endtime="20191003 15:38:15.312" starttime="20191003 15:38:12.738"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191003 15:38:15.314" level="INFO">{
  "metadata": {},
  "name": "26847-rpcwoport",
  "admin": "root",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": 1570117090234,
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ],
  "quota": 109951162777600
}</msg>
<status status="PASS" endtime="20191003 15:38:15.314" starttime="20191003 15:38:15.313"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191003 15:38:15.315" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191003 15:38:15.317" starttime="20191003 15:38:15.315"></status>
</kw>
<msg timestamp="20191003 15:38:15.317" level="INFO">${result} = {
  "metadata": {},
  "name": "26847-rpcwoport",
  "admin": "root",
  "owner": "testuser/scm@EXAMPLE.COM",
  "creationTime": 1570117090234,
  "acls": [
    {
      "type": "USER",
      "name": "testu...</msg>
<status status="PASS" endtime="20191003 15:38:15.317" starttime="20191003 15:38:12.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20191003 15:38:15.318" starttime="20191003 15:38:15.318"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume update ${protocol}${server}/${volume} --quota 10TB</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191003 15:38:15.323" level="INFO">Running command 'ozone sh volume update o3://om:9862/26847-rpcwoport --quota 10TB 2&gt;&amp;1'.</msg>
<msg timestamp="20191003 15:38:17.863" level="INFO">${rc} = 0</msg>
<msg timestamp="20191003 15:38:17.863" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191003 15:38:17.863" starttime="20191003 15:38:15.320"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191003 15:38:17.865" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
{
  "metadata" : { },
  "name" : "26847-rpcwoport",
  "admin" : "root",
  "owner" : "testuser/scm@EXAMPLE.COM",
  "creationTime" : 1570117090234,
  "acls" : [ {
    "type" : "USER",
    "name" : "testuser/scm@EXAMPLE.COM",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  }, {
    "type" : "GROUP",
    "name" : "root",
    "aclScope" : "ACCESS",
    "aclList" : [ "ALL" ]
  } ],
  "quota" : 10995116277760
}</msg>
<status status="PASS" endtime="20191003 15:38:17.865" starttime="20191003 15:38:17.864"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191003 15:38:17.866" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191003 15:38:17.866" starttime="20191003 15:38:17.865"></status>
</kw>
<status status="PASS" endtime="20191003 15:38:17.866" starttime="20191003 15:38:15.319"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | grep -Ev 'Removed|WARN|DEBUG|ERROR|INFO|TRACE' | jq -r '. | select(.name=="${volume}") | .quota'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191003 15:38:17.870" level="INFO">Running command 'ozone sh volume info o3://om:9862/26847-rpcwoport | grep -Ev 'Removed|WARN|DEBUG|ERROR|INFO|TRACE' | jq -r '. | select(.name=="26847-rpcwoport") | .quota' 2&gt;&amp;1'.</msg>
<msg timestamp="20191003 15:38:20.538" level="INFO">${rc} = 0</msg>
<msg timestamp="20191003 15:38:20.538" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20191003 15:38:20.539" starttime="20191003 15:38:17.868"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191003 15:38:20.541" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20191003 15:38:20.541" starttime="20191003 15:38:20.539"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191003 15:38:20.542" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191003 15:38:20.542" starttime="20191003 15:38:20.541"></status>
</kw>
<msg timestamp="20191003 15:38:20.543" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20191003 15:38:20.543" starttime="20191003 15:38:17.867"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20191003 15:38:20.544" starttime="20191003 15:38:20.543"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191003 15:38:20.548" level="INFO">Running command 'ozone sh bucket create o3://om:9862/26847-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20191003 15:38:23.166" level="INFO">${rc} = 0</msg>
<msg timestamp="20191003 15:38:23.167" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191003 15:38:23.167" starttime="20191003 15:38:20.546"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191003 15:38:23.168" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20191003 15:38:23.168" starttime="20191003 15:38:23.167"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191003 15:38:23.168" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191003 15:38:23.169" starttime="20191003 15:38:23.168"></status>
</kw>
<status status="PASS" endtime="20191003 15:38:23.169" starttime="20191003 15:38:20.545"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | grep -Ev 'Removed|WARN|DEBUG|ERROR|INFO|TRACE' | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191003 15:38:23.172" level="INFO">Running command 'ozone sh bucket info o3://om:9862/26847-rpcwoport/bb1 | grep -Ev 'Removed|WARN|DEBUG|ERROR|INFO|TRACE' | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20191003 15:38:25.788" level="INFO">${rc} = 0</msg>
<msg timestamp="20191003 15:38:25.788" level="INFO">${output} = DISK</msg>
<status status="PASS" endtime="20191003 15:38:25.789" starttime="20191003 15:38:23.170"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191003 15:38:25.790" level="INFO">DISK</msg>
<status status="PASS" endtime="20191003 15:38:25.790" starttime="20191003 15:38:25.789"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191003 15:38:25.790" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191003 15:38:25.791" starttime="20191003 15:38:25.790"></status>
</kw>
<msg timestamp="20191003 15:38:25.791" level="INFO">${result} = DISK</msg>
<status status="PASS" endtime="20191003 15:38:25.791" starttime="20191003 15:38:23.169"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" endtime="20191003 15:38:25.792" starttime="20191003 15:38:25.791"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | grep -Ev 'Removed|WARN|DEBUG|ERROR|INFO|TRACE' | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191003 15:38:25.794" level="INFO">Running command 'ozone sh bucket list o3://om:9862/26847-rpcwoport/ | grep -Ev 'Removed|WARN|DEBUG|ERROR|INFO|TRACE' | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20191003 15:38:28.372" level="INFO">${rc} = 0</msg>
<msg timestamp="20191003 15:38:28.372" level="INFO">${output} = 26847-rpcwoport</msg>
<status status="PASS" endtime="20191003 15:38:28.372" starttime="20191003 15:38:25.793"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191003 15:38:28.373" level="INFO">26847-rpcwoport</msg>
<status status="PASS" endtime="20191003 15:38:28.373" starttime="20191003 15:38:28.372"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191003 15:38:28.374" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191003 15:38:28.374" starttime="20191003 15:38:28.373"></status>
</kw>
<msg timestamp="20191003 15:38:28.374" level="INFO">${result} = 26847-rpcwoport</msg>
<status status="PASS" endtime="20191003 15:38:28.374" starttime="20191003 15:38:25.792"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" endtime="20191003 15:38:28.375" starttime="20191003 15:38:28.374"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191003 15:38:28.379" level="INFO">Running command 'ozone sh key put o3://om:9862/26847-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20191003 15:38:33.186" level="INFO">${rc} = 0</msg>
<msg timestamp="20191003 15:38:33.186" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191003 15:38:33.186" starttime="20191003 15:38:28.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191003 15:38:33.188" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20191003 15:38:33.188" starttime="20191003 15:38:33.187"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191003 15:38:33.189" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191003 15:38:33.189" starttime="20191003 15:38:33.188"></status>
</kw>
<status status="PASS" endtime="20191003 15:38:33.190" starttime="20191003 15:38:28.377"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>rm -f NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191003 15:38:33.193" level="INFO">Running command 'rm -f NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20191003 15:38:33.198" level="INFO">${rc} = 0</msg>
<msg timestamp="20191003 15:38:33.198" level="INFO">${output} = </msg>
<status status="PASS" endtime="20191003 15:38:33.198" starttime="20191003 15:38:33.191"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191003 15:38:33.199" level="INFO"></msg>
<status status="PASS" endtime="20191003 15:38:33.199" starttime="20191003 15:38:33.198"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191003 15:38:33.200" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191003 15:38:33.200" starttime="20191003 15:38:33.199"></status>
</kw>
<status status="PASS" endtime="20191003 15:38:33.200" starttime="20191003 15:38:33.190"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191003 15:38:33.202" level="INFO">Running command 'ozone sh key get o3://om:9862/26847-rpcwoport/bb1/key1 NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20191003 15:38:37.464" level="INFO">${rc} = 0</msg>
<msg timestamp="20191003 15:38:37.465" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191003 15:38:37.465" starttime="20191003 15:38:33.201"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191003 15:38:37.466" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20191003 15:38:37.466" starttime="20191003 15:38:37.465"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191003 15:38:37.467" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191003 15:38:37.467" starttime="20191003 15:38:37.466"></status>
</kw>
<status status="PASS" endtime="20191003 15:38:37.467" starttime="20191003 15:38:33.200"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ls -l NOTICE.txt.1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191003 15:38:37.470" level="INFO">Running command 'ls -l NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20191003 15:38:37.477" level="INFO">${rc} = 0</msg>
<msg timestamp="20191003 15:38:37.477" level="INFO">${output} = -rw-r--r--. 1 hadoop users 17540 Oct  3 15:38 NOTICE.txt.1</msg>
<status status="PASS" endtime="20191003 15:38:37.477" starttime="20191003 15:38:37.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191003 15:38:37.478" level="INFO">-rw-r--r--. 1 hadoop users 17540 Oct  3 15:38 NOTICE.txt.1</msg>
<status status="PASS" endtime="20191003 15:38:37.478" starttime="20191003 15:38:37.477"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191003 15:38:37.479" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191003 15:38:37.480" starttime="20191003 15:38:37.479"></status>
</kw>
<status status="PASS" endtime="20191003 15:38:37.480" starttime="20191003 15:38:37.467"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | grep -Ev 'Removed|WARN|DEBUG|ERROR|INFO|TRACE' | jq -r '. | select(.name=="key1")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191003 15:38:37.484" level="INFO">Running command 'ozone sh key info o3://om:9862/26847-rpcwoport/bb1/key1 | grep -Ev 'Removed|WARN|DEBUG|ERROR|INFO|TRACE' | jq -r '. | select(.name=="key1")' 2&gt;&amp;1'.</msg>
<msg timestamp="20191003 15:38:39.971" level="INFO">${rc} = 0</msg>
<msg timestamp="20191003 15:38:39.971" level="INFO">${output} = {
  "volumeName": "26847-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": 1570117110947,
  "modificationTime": 1570117112807,
  "replicationType": "RATIS",
 ...</msg>
<status status="PASS" endtime="20191003 15:38:39.971" starttime="20191003 15:38:37.482"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191003 15:38:39.972" level="INFO">{
  "volumeName": "26847-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": 1570117110947,
  "modificationTime": 1570117112807,
  "replicationType": "RATIS",
  "replicationFactor": 1,
  "ozoneKeyLocations": [
    {
      "containerID": 4,
      "localID": 102899194982695040,
      "length": 17540,
      "offset": 0
    }
  ],
  "metadata": {},
  "fileEncryptionInfo": null
}</msg>
<status status="PASS" endtime="20191003 15:38:39.973" starttime="20191003 15:38:39.972"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191003 15:38:39.973" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191003 15:38:39.973" starttime="20191003 15:38:39.973"></status>
</kw>
<msg timestamp="20191003 15:38:39.974" level="INFO">${result} = {
  "volumeName": "26847-rpcwoport",
  "bucketName": "bb1",
  "name": "key1",
  "dataSize": 17540,
  "creationTime": 1570117110947,
  "modificationTime": 1570117112807,
  "replicationType": "RATIS",
 ...</msg>
<status status="PASS" endtime="20191003 15:38:39.974" starttime="20191003 15:38:37.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20191003 15:38:39.974" starttime="20191003 15:38:39.974"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | grep -Ev 'Removed|WARN|DEBUG|ERROR|INFO|TRACE' | jq -r '. | select(.name=="key1") | .name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191003 15:38:39.977" level="INFO">Running command 'ozone sh key list o3://om:9862/26847-rpcwoport/bb1 | grep -Ev 'Removed|WARN|DEBUG|ERROR|INFO|TRACE' | jq -r '. | select(.name=="key1") | .name' 2&gt;&amp;1'.</msg>
<msg timestamp="20191003 15:38:42.537" level="INFO">${rc} = 0</msg>
<msg timestamp="20191003 15:38:42.537" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20191003 15:38:42.537" starttime="20191003 15:38:39.975"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191003 15:38:42.540" level="INFO">key1</msg>
<status status="PASS" endtime="20191003 15:38:42.540" starttime="20191003 15:38:42.538"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191003 15:38:42.541" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191003 15:38:42.541" starttime="20191003 15:38:42.540"></status>
</kw>
<msg timestamp="20191003 15:38:42.542" level="INFO">${result} = key1</msg>
<status status="PASS" endtime="20191003 15:38:42.542" starttime="20191003 15:38:39.974"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20191003 15:38:42.543" starttime="20191003 15:38:42.542"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191003 15:38:42.546" level="INFO">Running command 'ozone sh key rename o3://om:9862/26847-rpcwoport/bb1 key1 key2 2&gt;&amp;1'.</msg>
<msg timestamp="20191003 15:38:44.978" level="INFO">${rc} = 0</msg>
<msg timestamp="20191003 15:38:44.978" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191003 15:38:44.978" starttime="20191003 15:38:42.544"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191003 15:38:44.980" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20191003 15:38:44.980" starttime="20191003 15:38:44.979"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191003 15:38:44.981" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191003 15:38:44.981" starttime="20191003 15:38:44.980"></status>
</kw>
<status status="PASS" endtime="20191003 15:38:44.982" starttime="20191003 15:38:42.543"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | grep -Ev 'Removed|WARN|DEBUG|ERROR|INFO|TRACE' | jq -r '.name'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191003 15:38:44.985" level="INFO">Running command 'ozone sh key list o3://om:9862/26847-rpcwoport/bb1 | grep -Ev 'Removed|WARN|DEBUG|ERROR|INFO|TRACE' | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20191003 15:38:47.570" level="INFO">${rc} = 0</msg>
<msg timestamp="20191003 15:38:47.570" level="INFO">${output} = key2</msg>
<status status="PASS" endtime="20191003 15:38:47.571" starttime="20191003 15:38:44.983"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191003 15:38:47.572" level="INFO">key2</msg>
<status status="PASS" endtime="20191003 15:38:47.572" starttime="20191003 15:38:47.571"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191003 15:38:47.573" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191003 15:38:47.573" starttime="20191003 15:38:47.572"></status>
</kw>
<msg timestamp="20191003 15:38:47.574" level="INFO">${result} = key2</msg>
<status status="PASS" endtime="20191003 15:38:47.574" starttime="20191003 15:38:44.982"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20191003 15:38:47.575" starttime="20191003 15:38:47.574"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191003 15:38:47.577" level="INFO">Running command 'ozone sh key delete o3://om:9862/26847-rpcwoport/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20191003 15:38:49.995" level="INFO">${rc} = 0</msg>
<msg timestamp="20191003 15:38:49.996" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191003 15:38:49.996" starttime="20191003 15:38:47.576"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191003 15:38:49.997" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20191003 15:38:49.997" starttime="20191003 15:38:49.996"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191003 15:38:49.998" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191003 15:38:49.998" starttime="20191003 15:38:49.997"></status>
</kw>
<status status="PASS" endtime="20191003 15:38:49.998" starttime="20191003 15:38:47.575"></status>
</kw>
<status status="PASS" endtime="20191003 15:38:49.998" starttime="20191003 15:38:28.376"></status>
</kw>
<status status="PASS" endtime="20191003 15:38:49.998" starttime="20191003 15:38:28.375"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191003 15:38:50.001" level="INFO">Running command 'ozone sh bucket delete o3://om:9862/26847-rpcwoport/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20191003 15:38:52.368" level="INFO">${rc} = 0</msg>
<msg timestamp="20191003 15:38:52.368" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191003 15:38:52.368" starttime="20191003 15:38:49.999"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191003 15:38:52.369" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release</msg>
<status status="PASS" endtime="20191003 15:38:52.370" starttime="20191003 15:38:52.369"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191003 15:38:52.370" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191003 15:38:52.370" starttime="20191003 15:38:52.370"></status>
</kw>
<status status="PASS" endtime="20191003 15:38:52.371" starttime="20191003 15:38:49.998"></status>
</kw>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191003 15:38:52.373" level="INFO">Running command 'ozone sh volume delete o3://om:9862/26847-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20191003 15:38:54.750" level="INFO">${rc} = 0</msg>
<msg timestamp="20191003 15:38:54.750" level="INFO">${output} = WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-...</msg>
<status status="PASS" endtime="20191003 15:38:54.750" starttime="20191003 15:38:52.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191003 15:38:54.752" level="INFO">WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.hadoop.security.authentication.util.KerberosUtil (file:/opt/hadoop/share/ozone/lib/hadoop-auth-3.2.0.jar) to method sun.security.krb5.Config.getInstance()
WARNING: Please consider reporting this to the maintainers of org.apache.hadoop.security.authentication.util.KerberosUtil
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
Volume 26847-rpcwoport is deleted</msg>
<status status="PASS" endtime="20191003 15:38:54.752" starttime="20191003 15:38:54.751"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191003 15:38:54.752" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191003 15:38:54.753" starttime="20191003 15:38:54.752"></status>
</kw>
<status status="PASS" endtime="20191003 15:38:54.753" starttime="20191003 15:38:52.371"></status>
</kw>
<status status="PASS" endtime="20191003 15:38:54.753" starttime="20191003 15:38:07.778"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20191003 15:38:54.753" critical="yes" starttime="20191003 15:38:07.639"></status>
</test>
<test id="s1-s2-t2" name="RpcClient volume acls">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191003 15:38:54.758" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20191003 15:38:54.762" level="INFO">${rc} = 0</msg>
<msg timestamp="20191003 15:38:54.762" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20191003 15:38:54.762" starttime="20191003 15:38:54.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191003 15:38:54.763" level="INFO">scm</msg>
<status status="PASS" endtime="20191003 15:38:54.763" starttime="20191003 15:38:54.763"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191003 15:38:54.764" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191003 15:38:54.764" starttime="20191003 15:38:54.764"></status>
</kw>
<msg timestamp="20191003 15:38:54.764" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20191003 15:38:54.765" starttime="20191003 15:38:54.756"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20191003 15:38:54.765" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20191003 15:38:54.765" starttime="20191003 15:38:54.765"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191003 15:38:54.768" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20191003 15:38:54.804" level="INFO">${rc} = 0</msg>
<msg timestamp="20191003 15:38:54.804" level="INFO">${output} = </msg>
<status status="PASS" endtime="20191003 15:38:54.804" starttime="20191003 15:38:54.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191003 15:38:54.805" level="INFO"></msg>
<status status="PASS" endtime="20191003 15:38:54.805" starttime="20191003 15:38:54.805"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191003 15:38:54.806" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20191003 15:38:54.806" starttime="20191003 15:38:54.806"></status>
</kw>
<status status="PASS" endtime="20191003 15:38:54.806" starttime="20191003 15:38:54.766"></status>
</kw>
<status status="PASS" endtime="20191003 15:38:54.807" starttime="20191003 15:38:54.766"></status>
</kw>
<status status="PASS" endtime="20191003 15:38:54.807" starttime="20191003 15:38:54.755"></status>
</kw>
<status status="PASS" endtime="20191003 15:38:54.807" starttime="20191003 15:38:54.755"></status>
</kw>
<kw name="Test Volume Acls">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191003 15:38:54.810" level="INFO">Running command 'ozone sh volume create o3://om:9862/26847-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20191003 15:38:55.192" level="INFO">${rc} = 137</msg>
<msg timestamp="20191003 15:38:55.192" level="INFO">${output} = </msg>
<status status="PASS" endtime="20191003 15:38:55.192" starttime="20191003 15:38:54.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191003 15:38:55.193" level="INFO"></msg>
<status status="PASS" endtime="20191003 15:38:55.194" starttime="20191003 15:38:55.193"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>0</arg>
</arguments>
<msg timestamp="20191003 15:38:55.194" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20191003 15:38:55.195" level="FAIL">137 != 0</msg>
<status status="FAIL" endtime="20191003 15:38:55.195" starttime="20191003 15:38:55.194"></status>
</kw>
<status status="FAIL" endtime="20191003 15:38:55.196" starttime="20191003 15:38:54.808"></status>
</kw>
<status status="FAIL" endtime="20191003 15:38:55.196" starttime="20191003 15:38:54.807"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="FAIL" endtime="20191003 15:38:55.196" critical="yes" starttime="20191003 15:38:54.754">137 != 0</status>
</test>
<test id="s1-s2-t3" name="RpcClient bucket acls">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="commonlib">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20191003 15:38:55.202" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20191003 15:38:55.209" level="INFO">${rc} = 0</msg>
<msg timestamp="20191003 15:38:55.209" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20191003 15:38:55.209" starttime="20191003 15:38:55.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20191003 15:38:55.211" level="INFO">scm</msg>
<status status="PASS" endtime="20191003 15:38:55.211" starttime="20191003 15:38:55.210">